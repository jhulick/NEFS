* Need to add support for saving DialogContext values into XML (like Sparx 2.3 "pending" dialogs)
* Need to move error messages that occur in XDM parsing into Console too (instead of just stdout)
* Need to add support for <client-js href="create-app-url:/resources/scripts/eimo.js"/> within <dialog> tag (used to be there in Sparx 2.3)
* Need to add support for table dialogs (from Sparx 2.3)
* Take a look at http://xmljs.sourceforge.net/ for JavaScript XML parsing and record set management
* Take a look at http://www.duncanlamb.com/sdba/ for SDBA Revolution Instant Messaging Application Server and see if it's useful to create Sparx-based IM apps
* Add support for listeners in as many places in Sparx as makes sense -- e.g. for dialogs that don't want to be subclassed let them add DialogExecuteListener? DialogPopuplateListener? etc...
* Incorporate features from http://www.irongrid.com (IronEye SQL and IronEye Cache) into Console
* Take a look at http://www.softwareplanner.com to see what kinds of features from there can be added to Console, Beacon
* Create a console page that will show a list or statistics of all active scroll states (and ability to clear them/close them/etc).
* Add Label, AccessKey CSS attributes to allow keyboard navigation of forms
* Add keyboard navigation to navigation tree system (autogenerate JavaScript keyboard handlers that will call different pages)
* Add ID constants generator to Sparx components (just like Axiom components)
* Ensure that all validation functionality is removed from fields and placed into validator objects so that they can be reused in Axiom
* Add DHTML popup calendar from http://students.infoiasi.ro/~mishoo/site/calendar/cal.html.
* Add execute, populate, and makeStateChanges interfaces that can be "registered" for dialogs -- to delegate these activities
* Convert all ValueSource objects so their default points to ValueSource.NULL_VALUE_SOURCE -- this will eliminate many "if null" checks
* Add DHTML feature to Dialogs so that hints can optional only show up when a control is being edited (instead of all the time)
* Add execution statistics to Dialogs in the same manner as the stats for SQL (collection using Logs, etc) -- need to know all the same type of info: #time executed, avg time to render, etc
* Add Portlet API implementation for "output" panels (http://www-3.ibm.com/software/webservers/portal/library/InfoCenter/wps/wpspapi.html).
* Add built-in wiki parsing for panels so any panel/page can parse and show Wiki content
* Add ability for pages' body to be read in from databases, URLs, etc as well as files and local xml content
* Add "concurrent users" into console (all people currently logged in, perhaps total time spent doing stuff, etc)
* Add capability for HTTP request parameters to be automatically populate into beans for dialog context liks Struts does
* Add permissions, conditionals, etc into navigation trees
* Add style='report' to the SelectField that would merge the functionality of the old ReportField into SelectField. Consider merging the ReportSelectedItemsField into the same function so that SelectField can do everything within itself.
* Add 'forward', 'action', tags to <page> in navigation tree and connect to <director>
* Add 'style-sheet' value source tag to <page>, <report> and other places where XSLT might be useful
* Add sorting to report data source (which should also use cookies to store active sort criteria)
* Add a 'tip of the day' feature to Console that would get general usage tips for Sparx, Axiom, etc.
* Add a 'development tip of the day' feature to Console that would give general software development tips
* Consider adding rich text editing field mode (for field.memo) for IE/Moz using examples at http://www.kevinroth.com/rte/demo.htm and http://www.bris.ac.uk/is/projects/cms/ttw/ttw.html
* Consider using Jakarta Commons VFS (http://jakarta.apache.org/commons/sandbox/vfs/api.html) for panel body source locations so that they can be obtained from anywhere
* Allow documentation panels in console which borrow ideas from Sparx 2.0 documentation (summary blocks, XSL, etc)
* Add <panel-type>, <page-type> and other style page templates
* Look at Struts' MessageResources class for creating and 'rb' (resource-bundle) value source for internationlization
* Add DCB's that can populate actions
* Create demo Sparx using CD manager example in Sue Spielman's Struts book -- maybe other e.g.'s like that?
* Add getNavigationContext() as a member of ReportContext and DialogContext -- may return null if not using navigator
* Allow navigation trees and other tags to be "open" -- meaning if they're defined more than once their definitions are extended not replaced.
* Use XDoclet for generating TLD files -- using appropriate merge points.
* Consider using XDoclet for generation of DTD files and XSDs.
* Consider adding struts-style plugins?
* Implement JavaScript menu system using http://www.cs.ucla.edu/~heng/JSCookMenu/ (free for use)
* Review Jakarta Commons Messenger (http://jakarta.apache.org/commons/sandbox/messenger/index.html) for JMS processing via Servlet container (very cool)
* Review Jakarta Commons Resources (http://jakarta.apache.org/commons/sandbox/resources/index.html) for internationalization (i18n) of message strings
* Review Logidex Asset Center (http://www.logiclibrary.com) to see if we can use JavaDoc tags to create similar asset manager for Sparx code in Console

BUGS
* SelectField:
1. When choices are pure text (e.g. choices="Choice1=A;Choice2=B") without using the text-list value source, an ArrayIndexOutofBound exception is thrown instead of taking the choices string as a list with only one item. The same thing holds true for the default attribute also.
	java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.RangeCheck(ArrayList.java:508)
	at java.util.ArrayList.get(ArrayList.java:320)
	at com.netspective.commons.value.AbstractValue.getTextValue(AbstractValue.java:113)
	at com.netspective.commons.value.PresentationValue.getTextValue(PresentationValue.java:219)
	at com.netspective.commons.value.PresentationValue.getItems(PresentationValue.java:180)
	at com.netspective.sparx.form.field.type.SelectField.renderControlHtml(SelectField.java:509)
2. style="popup" doesn't  show the popup icon.
3. When choices attribute is set to a query that doesn't exist, an exception is thrown on the screen and the dialog isn't drawn.
	java.lang.NullPointerException
	at com.netspective.axiom.sql.Query.translateNameForMapKey(Query.java:168)
	at com.netspective.axiom.SqlManager.getQuery(SqlManager.java:131)
	at com.netspective.axiom.value.source.QueryResultsValueSource.getQueryResults(QueryResultsValueSource.java:281)
	at com.netspective.axiom.value.source.QueryResultsValueSource.getPresentationValue(QueryResultsValueSource.java:464)
	at com.netspective.commons.value.source.AbstractValueSource.getPresentationItem(AbstractValueSource.java:100)
	at com.netspective.sparx.form.field.type.SelectField.populateValue(SelectField.java:396)


* DateTimeField: The default values are being displayed in the wrong format. For time type, it is still considering it a date type.

* Conditionals: Error.
java.lang.NullPointerException
	at com.netspective.sparx.form.field.DialogField.finalizeContents(DialogField.java:794)
	at com.netspective.sparx.form.Dialog.finalizeContents(Dialog.java:502)
	at com.netspective.sparx.form.Dialog.createContext(Dialog.java:601)
	at com.netspective.sparx.command.DialogCommand.handleCommand(DialogCommand.java:229)
	at com.netspective.sparx.command.ValueSourceCommand.handleCommand(ValueSourceCommand.java:128)

* client-js:
1. Adding <client-js> to throws NPE
	java.lang.NullPointerException
        	at com.netspective.sparx.form.field.DialogField.addClientJs(DialogField.java:509)

* Value source error:
1. When using database related value sources (e.g query, query-col) and the SQL is not defined an exception is thrown:
java.lang.AbstractMethodError: com.netspective.sparx.panel.AbstractHtmlTabularReportPanel.createDataSource(Lcom/netspective/sparx/navigate/NavigationContext;)Lcom/netspective/commons/report/tabular/TabularReportDataSource;
	at com.netspective.sparx.panel.AbstractHtmlTabularReportPanel.render(AbstractHtmlTabularReportPanel.java:114)
	at com.netspective.sparx.panel.HtmlLayoutPanel.render(HtmlLayoutPanel.java:196)




