<?xml version="1.0" encoding="UTF-8"?>

<!-- ****************************************************************************
     * Generic axiom-types.xml file designed to be included by all Axiom Schema *
     * documents.                                                               *
     *                                                                          *
     * The <define> tags may contain java expressions (like ${xyz}) that may    *
     * refer to the following variables:                                        *
     *   'this': refers to the <define> where the 'dbms' value is available.    *
     *   'column': refers to the <column> object instance where all of the      *
     *             column's members are available for use.                      *
     **************************************************************************** -->

<xdm:container xmlns:xdm="http://www.netspective.org/Framework/Commons/XMLDataModel">

    <!-- ***************************************************************************
         * Basic text, integral, and boolean data-types                            *
         *************************************************************************** -->

    <data-type name="text" class="com.netspective.axiom.schema.column.type.TextColumn">
        <size>32</size>
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">varchar(${column.getSize()})</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">varchar(${column.getSize()})</define>
        </sql-ddl>
        <jdbc-type>VARCHAR</jdbc-type>
        <presentation>
            <field name="${column.getName()}" type="text" caption="${column.getCaption()}" max-length="${column.getSize()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="float" class="com.netspective.axiom.schema.column.type.FloatColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">float</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(20,6)</define>
        </sql-ddl>
        <jdbc-type>FLOAT</jdbc-type>
        <presentation>
            <field name="${column.getName()}" type="float" size="16" min="0.0" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="integer" class="com.netspective.axiom.schema.column.type.IntegerColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">integer</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(8)</define>
        </sql-ddl>
        <jdbc-type>INTEGER</jdbc-type>
        <presentation>
            <field name="${column.getName()}" type="integer" caption="${column.getCaption()}" size="16" min="0" max="99999999" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="small-int" class="com.netspective.axiom.schema.column.type.ShortIntegerColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">smallint</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(4)</define>
        </sql-ddl>
        <jdbc-type>SMALLINT</jdbc-type>
        <presentation>
            <field name="${column.getName()}" type="integer" caption="${column.getCaption()}" size="16" min="0" max="9999" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="long-integer" class="com.netspective.axiom.schema.column.type.LongIntegerColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">integer</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(16)</define>
        </sql-ddl>
        <jdbc-type>BIGINT</jdbc-type>
        <presentation>
            <field name="${column.getName()}" type="integer" caption="${column.getCaption()}" size="16" min="0" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="boolean" class="com.netspective.axiom.schema.column.type.BooleanColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">boolean</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(1)</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">bit</define>
            <define dbms="hsqldb" xdm:replace-template-expressions="no">bit</define>
        </sql-ddl>
        <jdbc-type>BOOLEAN</jdbc-type>
        <presentation>
            <field name="${column.getName()}" type="boolean" style="radio" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="data-block" class="com.netspective.axiom.schema.column.type.DataBlockColumn">
        <sql-ddl>
            <define dbms="oracle" xdm:replace-template-expressions="no">clob</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">text</define>
            <define dbms="hsqldb" xdm:replace-template-expressions="no">object</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">bytea</define>
        </sql-ddl>
        <jdbc-type>CLOB</jdbc-type>
    </data-type>

    <data-type name="xmltype" class="com.netspective.axiom.schema.column.type.DataBlockColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">text</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">xmltype</define>
        </sql-ddl>
        <jdbc-type>CLOB</jdbc-type>
    </data-type>

    <!-- ***************************************************************************
         * Basic date/time/datetime and range data-types                           *
         *************************************************************************** -->

    <data-type name="date" class="com.netspective.axiom.schema.column.type.DateColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
        </sql-ddl>
        <jdbc-type>DATE</jdbc-type>
        <presentation>
            <field name="${column.getName()}" type="date" size="16" format="MM-dd-yyyy" min="01-01-1900" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="date-time" class="com.netspective.axiom.schema.column.type.DateTimeColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">timestamp</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">timestamp</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="date-time" size="16" format="MM-dd-yyyy H:mm" min="01-01-1900 00\:00" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/> <!-- escape : in 'min' since it's a value source -->
        </presentation>
    </data-type>

    <!-- this is a regular date/time column but there is no <presentation> tag and has a useful default -->
    <data-type name="creation-stamp" class="com.netspective.axiom.schema.column.type.DateTimeColumn">
        <descr>Date/time record was created</descr>
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="hsqldb" xdm:replace-template-expressions="no">timestamp</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">timestamp</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">timestamp</define>
            <default dbms="oracle">SYSTIMESTAMP</default>
            <default dbms="hsqldb">'now'</default>
        </sql-ddl>
    </data-type>

    <data-type name="update-stamp" type="date-time" class="com.netspective.axiom.schema.column.type.UpdateStampColumn"/>

    <!-- alias for date-time -->
    <data-type name="stamp" type="date-time"/>

    <data-type name="time" class="com.netspective.axiom.schema.column.type.TimeColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
        </sql-ddl>
        <presentation>
            <!-- escape : in 'min' since it's a value source -->
            <field name="${column.getName()}" type="time" size="16" format="H:mm" min="00\:00" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="duration">
        <xdm:template-param name="name" required="yes" copy-attribute="name"/>

        <composite>
            <column name="${params.name}_begin_date" type="date" caption="${owner.getCaption()} Begin" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}" descr="${params.name} beginning date"/>
            <column name="${params.name}_end_date" type="date" caption="${owner.getCaption()} End" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}" descr="${params.name} ending date"/>
        </composite>
    </data-type>

    <data-type name="date-time-range">
        <xdm:template-param name="name" required="yes" copy-attribute="name"/>

        <composite>
            <column name="${params.name}_begin_stamp" type="date-time" caption="${owner.getCaption()} Begin" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}"/>
            <column name="${params.name}_end_stamp" type="date-time" caption="${owner.getCaption()} End" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}"/>
        </composite>
    </data-type>

    <!-- alias for date-time-range -->
    <data-type name="stamp-range" type="date-time-range"/>

    <data-type name="future-date" type="date">
        <validation>
            <rule name="future-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" future-only="yes"/>
        </validation>
    </data-type>

    <data-type name="past-date" type="date">
        <validation>
            <rule name="past-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" past-only="yes"/>
        </validation>
    </data-type>

    <data-type name="future-time" type="time"/>

    <data-type name="past-time" type="time"/>

    <data-type name="future-stamp" type="stamp">
        <validation>
            <rule name="future-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" future-only="yes"/>
        </validation>
    </data-type>

    <data-type name="past-stamp" type="stamp">
        <validation>
            <rule name="past-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" past-only="yes"/>
        </validation>
    </data-type>

    <data-type name="date-of-birth" type="past-date">
        <presentation>
            <field type="date" caption="Date of Birth" size="12"/>
        </presentation>
    </data-type>

    <data-type name="date-of-death" type="past-date">
        <presentation>
            <field type="date" caption="Date of Death" size="12"/>
        </presentation>
    </data-type>

    <data-type name="age" type="integer">
        <validation>
            <rule name="age" class="com.netspective.commons.validate.rule.IntegerValueValidationRule" min="0"/>
        </validation>
    </data-type>

    <!-- ***************************************************************************
         * Auto-generated data-types useful as primary keys                        *
         *************************************************************************** -->

    <data-type name="auto-inc" class="com.netspective.axiom.schema.column.type.AutoIncColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">integer</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(16)</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">integer IDENTITY</define>
            <define dbms="hsqldb" xdm:replace-template-expressions="no">integer IDENTITY</define>
            <define-ref dbms="mssql" xdm:replace-template-expressions="no">integer</define-ref>
            <define-ref dbms="hsqldb" xdm:replace-template-expressions="no">integer</define-ref>
        </sql-ddl>
        <foreign-key-referencee-class>com.netspective.axiom.schema.column.type.LongIntegerColumn</foreign-key-referencee-class>
    </data-type>

    <data-type name="guid-text" class="com.netspective.axiom.schema.column.type.GuidTextColumn">
        <validation>
            <rule class="com.netspective.commons.validate.rule.TextValueValidationRule" min-length="36" max-length="36"/>
        </validation>
        <size>36</size>
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">varchar(${column.getSize()})</define>
        </sql-ddl>
        <presentation>
            <field type="guid32">
                <conditional action="apply-flag" flag="hidden" data-cmd="add"/>
            </field>
        </presentation>
    </data-type>

    <data-type name="guid32" type="guid-text" class="com.netspective.axiom.schema.column.type.GuidColumn">
        <foreign-key-referencee-class>com.netspective.axiom.schema.column.type.GuidTextColumn</foreign-key-referencee-class>
        <presentation>
            <field type="guid32"/>
        </presentation>
    </data-type>

    <!-- ***************************************************************************
         * Set data-types                                                          *
         *************************************************************************** -->

    <data-type name="text-set" type="text" class="com.netspective.axiom.schema.column.type.TextSetColumn">
        <xdm:template-param name="name" copy-attribute="name" required="yes"/>
        <xdm:template-param name="abbrev" copy-attribute="abbrev,name" required="yes"/>

        <size>255</size>
        <table name="${owner.table.abbrev}_${params.name}_Set" abbrev="${owner.table.abbrev}${params.abbrev}St">
            <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
            <column name="parent_id" parentref="${owner.table.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
            <column name="value_index" type="integer" descr="The ordinal value (index) of the text or null if not important"/>
            <column name="value_text" type="text" size="32" descr="The actual text value"/>
        </table>
    </data-type>

    <data-type name="enum-set" type="text" class="com.netspective.axiom.schema.column.type.EnumSetColumn">
        <xdm:template-param name="name" copy-attribute="name"/>
        <xdm:template-param name="abbrev" copy-attribute="abbrev,name" required="yes"/>
        <xdm:template-param name="enumerationTable" required="yes"/>

        <size>255</size>
        <table name="${owner.table.abbrev}_${params.name}_Set" abbrev="${owner.table.abbrev}${params.abbrev}St">
            <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
            <column name="parent_id" parentref="${owner.table.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
            <column name="enum_index" type="integer" descr="The ordinal value (index) of the enumeration or null if not important"/>
            <column name="enum_value" lookupref="${params.enumerationTable}" descr="The value of the enumeration item"/>
        </table>
    </data-type>

    <!-- ***************************************************************************
         * Generic non-industry-specific application data-types                    *
         *************************************************************************** -->

    <data-type name="ssn" type="text">
        <validation>
            <rule name="ssn-format" class="com.netspective.commons.validate.rule.TextValueValidationRule" min-length="11" max-length="11" reg-expr="^[0-9]{3}\-[0-9]{2}\-[0-9]{4}$"/>
        </validation>
        <presentation>
            <field type="ssn" caption="Social Security Number" required="yes" size="11"/>
        </presentation>
    </data-type>

    <data-type name="currency" class="com.netspective.axiom.schema.column.type.CurrencyColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">float</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(12,2)</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">money</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">numeric(12,2)</define>
        </sql-ddl>
        <presentation>
            <field type="currency" size="16"/>
        </presentation>
    </data-type>

    <data-type name="percentage" type="float">
        <validation>
            <rule class="com.netspective.commons.validate.rule.PercentageValueValidationRule"/>
        </validation>
        <presentation>
            <field type="float" size="16" min="0.0" max="100.0"/>
        </presentation>
    </data-type>

    <data-type name="email" type="text">
        <size>96</size>
        <validation>
            <rule class="com.netspective.commons.validate.rule.EmailValueValidationRule"/>
        </validation>
        <presentation>
            <field type="e-mail" size="20"/>
        </presentation>
    </data-type>

    <data-type name="credit-card" type="text">
        <size>19</size>
        <validation>
            <rule class="com.netspective.commons.validate.rule.CreditCardValueValidationRule"/>
        </validation>
    </data-type>

    <data-type name="stock-symbol" type="text">
        <validation>
            <rule name="letters-only" class="com.netspective.commons.validate.rule.TextValueValidationRule" reg-expr="^[a-zA-Z]+$"/>
            <!--TODO: rule name="yahoo-stock-symbol-check" class="com.netspective.commons.validate.rule.StockSymbolValidationRule" method="yahoo"/ -->
        </validation>
    </data-type>

    <data-type name="time-zone" type="text">
        <validation>
            <rule name="time-zone" class="com.netspective.commons.validate.rule.TimeZoneValidationRule"/>
        </validation>
    </data-type>

    <data-type name="internet-hostname" type="text">
        <validation>
            <!-- Requires at least two parts to the hostname.  TLD's aren't considered valid hostnames. -->
            <!-- Requires custom validation -->
            <rule name="internet-hostname" class="com.netspective.commons.validate.rule.TextValueValidationRule" reg-expr="^([a-zA-Z0-9]+\.)*[a-zA-Z0-9]+\.[a-zA-Z]+$"/>
            <rule name="internet-hostname" class="com.netspective.commons.validate.rule.InternetHostnameValidationRule"/>
        </validation>
    </data-type>

    <data-type name="internet-ip-address" type="text">
        <validation>
            <!-- Requires exactly four dotted-decimal parts -->
            <rule name="internet-ip-address" class="com.netspective.commons.validate.rule.TextValueValidationRule" reg-expr="^([0-9]+\.){3}[0-9]+$"/>
            <rule name="internet-ip-address" class="com.netspective.commons.validate.rule.InternetIPAddressValidationRule"/>
        </validation>
    </data-type>

    <data-type name="lookup-with-freeform">
        <xdm:template-param name="name" required="yes" copy-attribute="name"/>
        <xdm:template-param name="idRequired" required="yes"/>
        <xdm:template-param name="enumerationTable" required="yes"/>
        <xdm:template-param name="primaryDescr" required="yes"/>
        <xdm:template-param name="primaryCaption" required="yes"/>

        <xdm:template-param name="freeformTextSize" default="64"/>
        <xdm:template-param name="enumerationTableOtherCaption" default="Other"/>

        <composite>
            <column name="${params.name}_id" lookupref="${params.enumerationTable}" caption="${params.primaryCaption}" required="${params.idRequired}" descr="${params.primaryDescr}">
                <presentation>
                    <field type="select" caption="${params.primaryCaption}"/>
                </presentation>
            </column>
            <column name="${params.name}" type="text" size="${params.freeformTextSize}" caption="${params.enumerationTableOtherCaption} ${params.primaryCaption}" descr="${params.primaryDescr} (if '${params.enumerationTableOtherCaption}' chosen above)">
                <presentation>
                    <field type="text" caption="${params.enumerationTableOtherCaption} ${params.primaryCaption}" size="16">
                        <conditional action="display" partner="${params.name}_id" js-expr="control.options[control.selectedIndex].text == '${params.enumerationTableOtherCaption}'"/>
                    </field>
                </presentation>
            </column>
        </composite>
    </data-type>

    <!-- ***************************************************************************
         * Assigning this table-type to any table will give it a default dialog    *
         *************************************************************************** -->

    <table-type name="Presentation">
        <presentation>
            <dialog class="com.netspective.sparx.form.schema.SchemaRecordEditorDialog"
                name="${table.name}">
                <frame heading="create-dialog-perspective-heading:${table.getCaption()}"/>
                <data-type-presentation columns="*"/>
            </dialog>
        </presentation>
    </table-type>

    <!-- ***************************************************************************
         * Standard table types and tables                                         *
         *************************************************************************** -->

    <data-type name="enumeration-id" type="integer" class="com.netspective.axiom.schema.column.type.EnumerationIdColumn">
        <foreign-key-referencee-class>com.netspective.axiom.schema.column.type.EnumerationIdRefColumn</foreign-key-referencee-class>
    </data-type>

    <table-type name="Enumeration" class="com.netspective.axiom.schema.table.type.EnumerationTable">
        <xdm:template-param name="capsize" default="96"/>
        <xdm:template-param name="abbrevsize" default="32"/>

        <column name="id" type="enumeration-id" primarykey="yes" descr="The value associated with a single enum"/>
        <column name="caption" type="text" size="${params.capsize}" required="yes" unique="yes" descr="The name/text an end-user would see"/>
        <column name="abbrev" type="text" size="${params.abbrevsize}" descr="An abbreviated form of the caption"/>
    </table-type>

    <!-- ************************************************************************** -->

    <table-type name="Lookup_Result_Type" abbrev="LkResTy" type="Enumeration">
        <enumerations>
            <enum>ID</enum>
            <enum>Caption</enum>
            <enum>Abbreviation</enum>
        </enumerations>
    </table-type>

    <table-type name="Lookup" type="Enumeration">
        <column name="group_name" type="text" size="32" descr="The group to which the lookup item belongs"/>
        <column name="sort_seq" type="integer" descr="The sorting sequence within the group (if sorting differently than the ID or Caption"/>
        <column name="result" lookupref="Lookup_Result_Type" descr="The type of result after a lookup (the value that should be used for the lookup -- the id or caption or abbreviation)"/>
    </table-type>

    <!-- ************************************************************************** -->

    <table-type name="Status" class="com.netspective.axiom.schema.table.type.EnumerationTable">
        <xdm:template-param name="capsize" default="96"/>
        <xdm:template-param name="abbrevsize" default="32"/>

        <!-- we are overriding the "normal" enumeration table and creating our own type because our 'id' column
             points to a different foreign-key referencee class (this is so that columns that refer to this id aren't
             shown in the UI since they are designed for 'backend' processing) -->
        <column name="id" type="enumeration-id" primarykey="yes" descr="The value associated with a single enum" foreign-key-referencee-class="com.netspective.axiom.schema.column.type.RecordStatusIdColumn"/>
        <column name="caption" type="text" size="${params.capsize}" required="yes" descr="The name/text an end-user would see"/>
        <column name="abbrev" type="text" size="${params.abbrevsize}" unique="yes" descr="An abbreviated form of the caption"/>

        <enumerations>
            <enum id="0" abbrev="I">Inactive</enum>
            <enum id="1" abbrev="A">Active</enum>
            <enum id="99" abbrev="U">Unknown</enum>
        </enumerations>
    </table-type>

    <table-type name="Record_Status" abbrev="RecStatus" type="Status">
        <!-- nothing here yet, just a placeholder for later enhancements -->
    </table-type>

    <!--
    *********************************************************************
    ** Versioned tables - a versioned table contains a creation stamp and
    ** record status code that can uniquely identify any row with or
    ** without a primary key.
    *********************************************************************
    -->

    <table-type name="Versioned">
        <xdm:template-param name="recordStatusEnumTableName" default="Record_Status"/>

        <column name="record_status_id" lookup-ref="${params.recordStatusEnumTableName}" descr="The status of a row in the table">
            <sql-ddl>
                <default dbms="ansi">1</default>
            </sql-ddl>
        </column>
        <column name="cr_stamp" type="creation-stamp"/>
    </table-type>

    <!--
    *********************************************************************
    ** Denormalization helper table types
    *********************************************************************
    -->

    <table-type name="Enumerated_Ids_List_Member" class="com.netspective.axiom.schema.table.type.EnumeratedValuesListTable">
        <xdm:template-param name="parentIdColName" default="parent_id"/>
        <xdm:template-param name="parentRef" required="yes"/>
        <xdm:template-param name="valueIndexColName" required="yes"/>
        <xdm:template-param name="valueColName" required="yes"/>
        <xdm:template-param name="valueRef" required="yes"/>
        <xdm:template-param name="uniqueRowIndexName" required="yes"/>

        <description>
            Maintains the normalized (DBMS-friendly) version of the denormalized single-column value in {params.parentRef}.
            {params.parentRef} contains a delimited copy of the values in this table in a denormalized manner so that
            a user that needs all the values at once just has to do a single table/column select and not a join to multiple
            rows. However, if the separated values need to be searched or joined, this normalized table can be used.
            Java-side triggers automatically manage the data in this table and records in this table should not be modified
            manually.
        </description>

        <column name="${params.parentIdColName}" parent-ref="${params.parentRef}" required="yes" descr="The owner of the enumerated value this entry was created for"/>
        <column name="${params.valueIndexColName}" type="integer" indexed="yes" required="yes" descr="The position of the ${params.valueColName} value in ${params.parentIdColName}'s delmited column"/>
        <column name="${params.valueColName}" lookup-ref="${params.valueRef}" required="yes" indexed="yes" descr="The enumerated value that is contained in ${params.parentIdColName} at position ${params.valueIndexColName}"/>

        <!-- make sure a relationship record remains unique -->
        <index name="${owner.abbrev}_${params.uniqueRowIndexName}" unique="yes" columns="${params.parentIdColName},${params.valueIndexColName},${params.valueColName}"/>

        <!-- required for the EnumeratedValuesArray class so that it knows the columns it is working with -->
        <parentIdColName>${params.parentIdColName}</parentIdColName>
        <valueIndexColName>${params.valueIndexColName}</valueIndexColName>
        <valueColName>${params.valueColName}</valueColName>
    </table-type>

    <data-type name="enumeration-ids-list" type="text" class="com.netspective.axiom.schema.column.type.EnumeratedValuesListColumn">
        <xdm:template-param name="enumeratedIdsListMemberTable" required="yes"/>

        <!-- use XDM to tell the com.netspective.axiom.schema.column.type.EnumeratedValuesArray class about the helper table -->
        <enumeratedIdsListMemberTableName>${params.enumeratedIdsListMemberTable}</enumeratedIdsListMemberTableName>
    </data-type>

    <!--
    *********************************************************************
    ** Relationship Tables and Enumerations
    *********************************************************************
    -->

    <table-type name="Entity_Hierarchy" class="com.netspective.axiom.schema.table.type.EntityHierarchyTable">
        <xdm:template-param name="hierTypeTable" required="yes"/>
        <xdm:template-param name="entityRef" required="yes"/>

        <xdm:template-param name="hierTypeIdColName" default="hier_type_id"/>
        <xdm:template-param name="primaryIdColName" default="primary_id"/>
        <xdm:template-param name="relatedIdColName" default="related_id"/>
        <xdm:template-param name="hierDistanceColName" default="rel_distance"/>
        <xdm:template-param name="uniqueHierIndexName" default="hier_unq"/>

        <description>
            Maintains the hierarchy of a ${params.entityRef} row with respect to other
            ${params.entityRef} rows. The ${params.primaryIdColName} column is a ${params.entityRef} reference that
            indicates it is hierarcially related to the ${params.relatedIdColName}. The actual relationship type is
            specified in ${params.hierTypeIdColName}. Only records of ${params.hierTypeIdColName} 'Parent' (id 0) should
            be added or deleted to this row; this is because the 'Ancestor' (id 1) type is automatically managed by
            Axiom table triggers (in Java, on the application side). Records in this table should not be updated, only
            added or deleted. If a relationship needs to be modified, the existing 'Parent' relationship should first be
            deleted (so that the triggers can remove the ancestors) and then a new one should be added (so that the
            triggers can add the ancestors). The relationship is read like "the ${params.primaryIdColName} is a
            '${params.hierTypeIdColName}' (Parent, Ancestor) of ${params.relatedIdColName}".
        </description>

        <column name="${params.hierTypeIdColName}" lookup-ref="${params.hierTypeTable}" indexed="yes" required="yes" descr="The relationship type."/>
        <column name="${params.primaryIdColName}" parent-ref="${params.entityRef}" indexed="yes" required="yes" descr="The owner of the relationship row this entry was created for"/>
        <column name="${params.relatedIdColName}" lookup-ref="${params.entityRef}" indexed="yes" required="yes" descr="The relationship row this entry was created for"/>
        <column name="${params.hierDistanceColName}" type="long-integer" indexed="yes" descr="The distance from which the related item is related by rel_type_id (used by ancestor, descentant)"/>

        <!-- make sure a relationship record remains unique -->
        <index name="${owner.abbrev}_${params.uniqueHierIndexName}" unique="yes" columns="${params.hierTypeIdColName},${params.primaryIdColName},${params.relatedIdColName}"/>

        <!-- required for the RelationshipMapTable class so that it knows the columns it is working with -->
        <hier-type-id-col-name>${params.hierTypeIdColName}</hier-type-id-col-name>
        <primary-id-col-name>${params.primaryIdColName}</primary-id-col-name>
        <related-id-col-name>${params.relatedIdColName}</related-id-col-name>
        <hier-distance-col-name>${params.hierDistanceColName}</hier-distance-col-name>
        <unique-hier-index-name>${owner.abbrev}_${params.uniqueHierIndexName}</unique-hier-index-name>
    </table-type>

    <table-type name="Entity_Hierarchy_Type" type="Enumeration">
        <!-- if any of the enum IDs change here the corresponding constants must be modified in
             the com.netspective.axiom.schema.table.type.RelationshipMapTable source code -->
        <enumerations>
            <enum id="0">Parent</enum> <!-- signifies that the primary id is a parent of the related id -->
            <enum id="1">Ancestor</enum> <!-- signifies that the primary id is an ancestor of the related id (distance column tells how far, 0 is same as parent) -->
        </enumerations>
    </table-type>

    <table-type name="Entity_Hierarchy_Status" type="Status">
        <!-- nothing here yet, just a placeholder for later enhancements -->
    </table-type>

    <table-type name="Relationship_Map" class="com.netspective.axiom.schema.table.type.RelationshipMapTable">
        <xdm:template-param name="relationshipTypeIdColName" default="rel_type_id"/>
        <xdm:template-param name="relationshipTypeTable" required="yes"/>
        <xdm:template-param name="primaryIdColName" default="primary_item_id"/>
        <xdm:template-param name="relatedIdColName" default="related_item_id"/>
        <xdm:template-param name="primaryIdParentRef" required="yes"/>
        <xdm:template-param name="relatedIdLookupRef" required="yes"/>
        <xdm:template-param name="uniqueRelationshipIndexName" default="rel_unq"/>

        <description>
            Maintains the mapping of the relationship of a ${params.primaryIdParentRef} row with
            respect to a ${params.relatedIdLookupRef} row. A row in this table is owned by (is a child of) the
            ${params.primaryIdParentRef} table and is identified by the ${params.primaryIdColName}. How the row
            referened by the ${params.primaryIdColName} is related to the ${params.relatedIdLookupRef}, identified by
            ${params.relatedIdColName}, is specified in the ${params.relationshipTypeIdColName} column. The relationship
            is read like "the ${params.primaryIdColName} is a '${params.relatedIdLookupRef}' (Child, etc) of
            ${params.relatedIdColName}".
        </description>

        <column name="${params.relationshipTypeIdColName}" lookup-ref="${params.relationshipTypeTable}" indexed="yes" required="yes" descr="The relationship type."/>
        <column name="${params.primaryIdColName}" parent-ref="${params.primaryIdParentRef}" indexed="yes" required="yes" descr="The owner of the relationship row this entry was created for"/>
        <column name="${params.relatedIdColName}" lookup-ref="${params.relatedIdLookupRef}" indexed="yes" required="yes" descr="The relationship row this entry was created for"/>

        <!-- make sure a relationship record remains unique -->
        <index name="${owner.abbrev}_${params.uniqueRelationshipIndexName}" unique="yes" columns="${params.relationshipTypeIdColName},${params.primaryIdColName},${params.relatedIdColName}"/>

        <!-- required for the RelationshipMapTable class so that it knows the columns it is working with -->
        <relationship-type-id-col-name>${params.relationshipTypeIdColName}</relationship-type-id-col-name>
        <primary-id-col-name>${params.primaryIdColName}</primary-id-col-name>
        <related-id-col-name>${params.relatedIdColName}</related-id-col-name>
        <unique-relationship-index-name>${owner.abbrev}_${params.uniqueRelationshipIndexName}</unique-relationship-index-name>
    </table-type>

    <table-type name="Relationship_Type" type="Enumeration">
        <!-- if any of the enum IDs change here the corresponding constants must be modified in
             the com.netspective.axiom.schema.table.type.RelationshipMapTable source code -->
        <enumerations>
            <enum id="0">Child</enum> <!-- primaryIdColName's ref is a child of relatedIdColName's ref -->
        </enumerations>
    </table-type>

    <table-type name="Relationship_Status" type="Status">
        <!-- nothing here yet, just a placeholder for later enhancements -->
    </table-type>

    <!--
    *********************************************************************
    ** Variant records manager
    *********************************************************************
    -->

    <data-type name="entity-variant-record-type-id" type="integer" class="com.netspective.axiom.schema.column.type.EntityVariantRecordTypeIdColumn">
        <foreign-key-referencee-class>com.netspective.axiom.schema.column.type.EntityVariantRecordTypeIdRefColumn</foreign-key-referencee-class>
    </data-type>

    <data-type name="entity-variant-record-value" type="text" class="com.netspective.axiom.schema.column.type.EntityVariantRecordValueColumn">
        <size>1024</size>
    </data-type>

    <table-type name="Entity_Variant_Record_Type" class="com.netspective.axiom.schema.table.type.EntityVariantRecordTypeTable">
        <xdm:template-param name="tableDescr" required="yes"/>
        <xdm:template-param name="variantColNamePrefix" required="yes"/>

        <xdm:template-param name="variantTypeNameSize" default="256"/>
        <xdm:template-param name="variantClassNameSize" default="256"/>
        <xdm:template-param name="variantDescrSize" default="512"/>
        <xdm:template-param name="variantDefaultValueSize" default="512"/>

        <description>${params.tableDescr}</description>

        <column name="${params.variantColNamePrefix}_type_id" type="entity-variant-record-type-id" primary-key="yes" descr="The identifier of the ${params.variantColNamePrefix} type"/>
        <column name="${params.variantColNamePrefix}_type_name" type="text" size="${params.variantTypeNameSize}" required="yes" descr="The name of the ${params.variantColNamePrefix} type"/>
        <column name="${params.variantColNamePrefix}_type_java_class" type="text" size="${params.variantClassNameSize}" required="yes" descr="The application's class that will handle the value of the ${params.variantColNamePrefix} type in Java"/>
        <column name="${params.variantColNamePrefix}_type_default" type="text" size="${params.variantDefaultValueSize}" descr="The default value of a record of ${params.variantColNamePrefix} type that has a NULL value"/>
        <column name="${params.variantColNamePrefix}_type_descr" type="text" size="${params.variantDescrSize}" descr="The description of the ${params.variantColNamePrefix} type"/>

        <!-- required for the EntityVariantRecordTypeTable class so that it knows the columns it is working with -->
        <type-id-col-name>${params.variantColNamePrefix}_type_id</type-id-col-name>
        <type-name-col-name>${params.variantColNamePrefix}_type_name</type-name-col-name>
        <type-java-class-col-name>${params.variantColNamePrefix}_type_java_class</type-java-class-col-name>
        <type-default-col-name>${params.variantColNamePrefix}_type_default</type-default-col-name>
        <type-descr-col-name>${params.variantColNamePrefix}_type_descr</type-descr-col-name>

        <!-- Tables that use this type can define data elements like this (similar to enumerations)
        <types>
            <type XXX_type_name="Foo" XXX_type_java_class="java.lang.String"/>
            <type XXX_type_name="Bar" XXX_type_java_class="java.lang.Boolean"/>
            <type id="abc" XXX_type_name="Foo" XXX_type_java_class="java.lang.String[]"/> [id is optional]
        </types>
        -->
    </table-type>

    <table-type name="Entity_Variant_Record" class="com.netspective.axiom.schema.table.type.EntityVariantRecordTable">
        <xdm:template-param name="tableDescr" required="yes"/>
        <xdm:template-param name="variantColNamePrefix" required="yes"/>
        <xdm:template-param name="variantTypeTable" required="yes"/>
        <xdm:template-param name="entityRefColName" required="yes"/>
        <xdm:template-param name="entityRef" required="yes"/>

        <xdm:template-param name="variantValueType" default="entity-variant-record-value"/>

        <description>${params.tableDescr}</description>

        <column name="${params.entityRefColName}" parent-ref="${params.entityRef}" indexed="yes" required="yes" descr="The ${params.entityRef} to which the ${params.variantColNamePrefix} belongs."/>
        <column name="${params.variantColNamePrefix}_type_id" lookup-ref="${params.variantTypeTable}" required="yes" descr="The ${params.variantColNamePrefix} type"/>
        <column name="${params.variantColNamePrefix}_value" type="${params.variantValueType}" descr="The value of the ${params.variantColNamePrefix} (in a format that the associated class can use it)"/>

        <!-- required for the EntityVariantRecordTable class so that it knows the columns it is working with -->
        <entity-id-col-name>${params.entityRefColName}</entity-id-col-name>
        <type-id-col-name>${params.variantColNamePrefix}_type_id</type-id-col-name>
        <value-col-name>${params.variantColNamePrefix}_value</value-col-name>
    </table-type>

</xdm:container>
