<?xml version="1.0" encoding="UTF-8"?>

<!-- ****************************************************************************
     * Generic axiom-types.xml file designed to be included by all Axiom Schema *
     * documents.                                                               *
     *                                                                          *
     * The <define> tags may contain java expressions (like ${xyz}) that may    *
     * refer to the following variables:                                        *
     *   'this': refers to the <define> where the 'dbms' value is available.    *
     *   'column': refers to the <column> object instance where all of the      *
     *             column's members are available for use.                      *
     **************************************************************************** -->

<xdm:container xmlns:xdm="http://www.netspective.org/Framework/Commons/XMLDataModel">

    <!-- ***************************************************************************
         * Basic text, integral, and boolean data-types                            *
         *************************************************************************** -->

    <data-type name="text" class="com.netspective.axiom.schema.column.type.TextColumn">
        <size>32</size>
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">varchar(${column.getSize()})</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">varchar(${column.getSize()})</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="text" caption="${column.getCaption()}" max-length="${column.getSize()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="float" class="com.netspective.axiom.schema.column.type.FloatColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">float</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(20,6)</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="float" size="16" min="0.0" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="integer" class="com.netspective.axiom.schema.column.type.IntegerColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">integer</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(8)</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="integer" caption="${column.getCaption()}" size="16" min="0" max="99999999" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="small-int" class="com.netspective.axiom.schema.column.type.ShortIntegerColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">smallint</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(4)</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="integer" caption="${column.getCaption()}" size="16" min="0" max="9999" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="long-integer" class="com.netspective.axiom.schema.column.type.LongIntegerColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">integer</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(16)</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="integer" caption="${column.getCaption()}" size="16" min="0" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="boolean" class="com.netspective.axiom.schema.column.type.BooleanColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">boolean</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(1)</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">bit</define>
            <define dbms="hsqldb" xdm:replace-template-expressions="no">bit</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="boolean" style="radio" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="data-block" class="com.netspective.axiom.schema.column.type.DataBlockColumn">
        <sql-ddl>
            <define dbms="oracle" xdm:replace-template-expressions="no">clob</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">text</define>
            <define dbms="hsqldb" xdm:replace-template-expressions="no">object</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">bytea</define>
        </sql-ddl>
    </data-type>

    <!-- ***************************************************************************
         * Basic date/time/datetime and range data-types                           *
         *************************************************************************** -->

    <data-type name="date" class="com.netspective.axiom.schema.column.type.DateColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="date" size="16" format="MM-dd-yyyy" min="01-01-1900" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="date-time" class="com.netspective.axiom.schema.column.type.DateTimeColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">timestamp</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">timestamp</define>
        </sql-ddl>
        <presentation>
            <field name="${column.getName()}" type="date-time" size="16" format="MM-dd-yyyy H:mm" min="01-01-1900 00\:00" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/> <!-- escape : in 'min' since it's a value source -->
        </presentation>
    </data-type>

    <!-- this is a regular date/time column but there is no <presentation> tag and has a useful default -->
    <data-type name="creation-stamp" class="com.netspective.axiom.schema.column.type.DateTimeColumn">
        <required>dbms</required>
        <descr>Date/time record was created</descr>
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">timestamp</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">timestamp</define>
            <default dbms="oracle">sysdate</default>
        </sql-ddl>
        <value-defn>
            <default dbms="hsqldb">now()</default>
        </value-defn>
    </data-type>

    <data-type name="update-stamp" type="date-time" class="com.netspective.axiom.schema.column.type.UpdateStampColumn"/>

    <!-- alias for date-time -->
    <data-type name="stamp" type="date-time"/>

    <data-type name="time" class="com.netspective.axiom.schema.column.type.TimeColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">date</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">datetime</define>
        </sql-ddl>
        <presentation>
            <!-- escape : in 'min' since it's a value source -->
            <field name="${column.getName()}" type="time" size="16" format="H:mm" min="00\:00" caption="${column.getCaption()}" required="${column.isRequiredByApp() || column.isPrimaryKey()}"/>
        </presentation>
    </data-type>

    <data-type name="duration">
        <xdm:template-param name="name" required="yes" copy-attribute="name"/>

        <composite>
            <column name="${params.name}_begin_date" type="date" caption="${owner.getCaption()} Begin" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}" descr="${params.name} beginning date"/>
            <column name="${params.name}_end_date" type="date" caption="${owner.getCaption()} End" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}" descr="${params.name} ending date"/>
        </composite>
    </data-type>

    <data-type name="date-time-range">
        <xdm:template-param name="name" required="yes" copy-attribute="name"/>

        <composite>
            <column name="${params.name}_begin_stamp" type="date-time" caption="${owner.getCaption()} Begin" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}"/>
            <column name="${params.name}_end_stamp" type="date-time" caption="${owner.getCaption()} End" required="${owner.isRequiredByApp() || owner.isPrimaryKey()}" />
        </composite>
    </data-type>

    <!-- alias for date-time-range -->
    <data-type name="stamp-range" type="date-time-range"/>

    <data-type name="future-date" type="date">
        <validation>
            <rule name="future-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" future-only="yes"/>
        </validation>
    </data-type>

    <data-type name="past-date" type="date">
        <validation>
            <rule name="past-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" past-only="yes"/>
        </validation>
    </data-type>

    <data-type name="future-time" type="time"/>

    <data-type name="past-time" type="time"/>

    <data-type name="future-stamp" type="stamp">
        <validation>
            <rule name="future-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" future-only="yes"/>
        </validation>
    </data-type>

    <data-type name="past-stamp" type="stamp">
        <validation>
            <rule name="past-only" class="com.netspective.commons.validate.rule.DateValueValidationRule" past-only="yes"/>
        </validation>
    </data-type>

    <data-type name="date-of-birth" type="past-date">
        <presentation>
            <field type="date" caption="Date of Birth" size="12"/>
        </presentation>
    </data-type>

    <data-type name="date-of-death" type="past-date">
        <presentation>
            <field type="date" caption="Date of Death" size="12"/>
        </presentation>
    </data-type>

    <data-type name="age" type="integer">
        <validation>
            <rule name="age" class="com.netspective.commons.validate.rule.IntegerValueValidationRule" min="0"/>
        </validation>
    </data-type>

    <!-- ***************************************************************************
         * Auto-generated data-types useful as primary keys                        *
         *************************************************************************** -->

    <data-type name="auto-inc" class="com.netspective.axiom.schema.column.type.AutoIncColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">integer</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(16)</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">integer IDENTITY</define>
            <define dbms="hsqldb" xdm:replace-template-expressions="no">integer IDENTITY</define>
            <define-ref dbms="mssql" xdm:replace-template-expressions="no">integer</define-ref>
            <define-ref dbms="hsqldb" xdm:replace-template-expressions="no">integer</define-ref>
        </sql-ddl>
        <foreign-key-referencee-class>com.netspective.axiom.schema.column.type.LongIntegerColumn</foreign-key-referencee-class>
    </data-type>

    <data-type name="guid-text" class="com.netspective.axiom.schema.column.type.GuidTextColumn">
        <validation>
            <rule class="com.netspective.commons.validate.rule.TextValueValidationRule" min-length="36" max-length="36"/>
        </validation>
        <size>36</size>
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">varchar(${column.getSize()})</define>
        </sql-ddl>
        <presentation>
            <field type="guid32">
                <conditional action="apply-flag" flag="hidden" data-cmd="add"/>
            </field>
        </presentation>
    </data-type>

    <data-type name="guid32" type="guid-text" class="com.netspective.axiom.schema.column.type.GuidColumn">
        <foreign-key-referencee-class>com.netspective.axiom.schema.column.type.GuidTextColumn</foreign-key-referencee-class>
        <presentation>
            <field type="guid32"/>
        </presentation>
    </data-type>

    <!-- ***************************************************************************
         * Set data-types                                                          *
         *************************************************************************** -->

    <data-type name="text-set" type="text" class="com.netspective.axiom.schema.column.type.TextSetColumn">
        <xdm:template-param name="name" copy-attribute="name" required="yes"/>
        <xdm:template-param name="abbrev" copy-attribute="abbrev,name" required="yes"/>

        <size>255</size>
        <table name="${owner.table.abbrev}_${params.name}_Set" abbrev="${owner.table.abbrev}${params.abbrev}St">
            <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
            <column name="parent_id" parentref="${owner.table.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
            <column name="value_index" type="integer" descr="The ordinal value (index) of the text or null if not important"/>
            <column name="value_text" type="text" size="32" descr="The actual text value"/>
        </table>
    </data-type>

    <data-type name="enum-set" type="text" class="com.netspective.axiom.schema.column.type.EnumSetColumn">
        <xdm:template-param name="name" copy-attribute="name"/>
        <xdm:template-param name="abbrev" copy-attribute="abbrev,name" required="yes"/>
        <xdm:template-param name="enumerationTable" required="yes"/>

        <size>255</size>
        <table name="${owner.table.abbrev}_${params.name}_Set" abbrev="${owner.table.abbrev}${params.abbrev}St">
            <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
            <column name="parent_id" parentref="${owner.table.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
            <column name="enum_index" type="integer" descr="The ordinal value (index) of the enumeration or null if not important"/>
            <column name="enum_value" lookupref="${params.enumerationTable}" descr="The value of the enumeration item"/>
        </table>
    </data-type>

    <!-- ***************************************************************************
         * Generic non-industry-specific application data-types                    *
         *************************************************************************** -->

    <data-type name="ssn" type="text">
        <validation>
            <rule name="ssn-format" class="com.netspective.commons.validate.rule.TextValueValidationRule" min-length="11" max-length="11" reg-expr="^[0-9]{3}\-[0-9]{2}\-[0-9]{4}$"/>
        </validation>
        <presentation>
            <field type="ssn" caption="Social Security Number" required="yes" size="11"/>
        </presentation>
    </data-type>

    <data-type name="currency" class="com.netspective.axiom.schema.column.type.CurrencyColumn">
        <sql-ddl>
            <define dbms="ansi" xdm:replace-template-expressions="no">float</define>
            <define dbms="oracle" xdm:replace-template-expressions="no">number(12,2)</define>
            <define dbms="mssql" xdm:replace-template-expressions="no">money</define>
            <define dbms="postgres" xdm:replace-template-expressions="no">numeric(12,2)</define>
        </sql-ddl>
        <presentation>
            <field type="currency" size="16"/>
        </presentation>
    </data-type>

    <data-type name="percentage" type="float">
        <validation>
            <rule class="com.netspective.commons.validate.rule.PercentageValueValidationRule"/>
        </validation>
        <presentation>
            <field type="float" size="16" min="0.0" max="100.0"/>
        </presentation>
    </data-type>

    <data-type name="email" type="text">
        <size>96</size>
        <validation>
            <rule class="com.netspective.commons.validate.rule.EmailValueValidationRule"/>
        </validation>
        <presentation>
            <field type="e-mail" size="20"/>
        </presentation>
    </data-type>

    <data-type name="credit-card" type="text">
        <size>19</size>
        <validation>
            <rule class="com.netspective.commons.validate.rule.CreditCardValueValidationRule"/>
        </validation>
    </data-type>

    <data-type name="stock-symbol" type="text">
        <validation>
            <rule name="letters-only" class="com.netspective.commons.validate.rule.TextValueValidationRule" reg-expr="^[a-zA-Z]+$"/>
            <!--TODO: rule name="yahoo-stock-symbol-check" class="com.netspective.commons.validate.rule.StockSymbolValidationRule" method="yahoo"/ -->
        </validation>
    </data-type>

    <data-type name="time-zone" type="text">
        <validation>
            <rule name="time-zone" class="com.netspective.commons.validate.rule.TimeZoneValidationRule"/>
        </validation>
    </data-type>

    <data-type name="internet-hostname" type="text">
        <validation>
            <!-- Requires at least two parts to the hostname.  TLD's aren't considered valid hostnames. -->
            <!-- Requires custom validation -->
            <rule name="internet-hostname" class="com.netspective.commons.validate.rule.TextValueValidationRule" reg-expr="^([a-zA-Z0-9]+\.)*[a-zA-Z0-9]+\.[a-zA-Z]+$"/>
            <rule name="internet-hostname" class="com.netspective.commons.validate.rule.InternetHostnameValidationRule"/>
        </validation>
    </data-type>

    <data-type name="internet-ip-address" type="text">
        <validation>
            <!-- Requires exactly four dotted-decimal parts -->
            <rule name="internet-ip-address" class="com.netspective.commons.validate.rule.TextValueValidationRule" reg-expr="^([0-9]+\.){3}[0-9]+$"/>
            <rule name="internet-ip-address" class="com.netspective.commons.validate.rule.InternetIPAddressValidationRule"/>
        </validation>
    </data-type>

    <data-type name="lookup-with-freeform">
        <xdm:template-param name="name" required="yes" copy-attribute="name"/>
        <xdm:template-param name="size" required="yes" copy-attribute="size"/>
        <xdm:template-param name="caption" required="yes" copy-attribute="caption"/>
        <xdm:template-param name="descr" required="yes" copy-attribute="descr"/>
        <xdm:template-param name="enumerationTable" required="yes"/>

        <composite>
            <column name="${params.name}_id" lookupref="${params.enumerationTable}" caption="${params.caption}" descr="${params.descr}">
                <presentation>
                    <field type="select" caption="${params.caption}"/>
                </presentation>
            </column>
            <column name="${params.name}" type="text" size="${params.size}" caption="${params.caption}" descr="${params.descr} (if 'Other' chosen above)">
                <presentation>
                    <field type="text" caption="Other ${params.caption}" size="16">
                        <conditional action="display" partner="${params.name}_id" js-expr="control.options[control.selectedIndex].text == 'Other'"/>
                    </field>
                </presentation>
            </column>
        </composite>
    </data-type>

    <!-- ***************************************************************************
         * Assigning this table-type to any table will give it a default dialog    *
         *************************************************************************** -->

    <table-type name="Presentation">
        <presentation>
            <dialog class="com.netspective.sparx.form.schema.SchemaRecordEditorDialog"
                    name="${table.name}">
                <frame heading="create-dialog-perspective-heading:${table.getCaption()}"/>
                <data-type-presentation columns="*"/>
            </dialog>
        </presentation>
    </table-type>

    <!-- ***************************************************************************
         * Standard table types and tables                                         *
         *************************************************************************** -->

    <data-type name="enumeration-id" type="integer" class="com.netspective.axiom.schema.column.type.EnumerationIdColumn">
        <foreign-key-referencee-class>com.netspective.axiom.schema.column.type.EnumerationIdRefColumn</foreign-key-referencee-class>
    </data-type>

    <table-type name="Enumeration" class="com.netspective.axiom.schema.table.type.EnumerationTable">
        <xdm:template-param name="capsize" default="96"/>
        <xdm:template-param name="abbrevsize" default="32"/>

        <column name="id" type="enumeration-id" primarykey="yes" descr="The value associated with a single enum"/>
        <column name="caption" type="text" size="${params.capsize}" required="yes" descr="The name/text an end-user would see"/>
        <column name="abbrev" type="text" size="${params.abbrevsize}" descr="An abbreviated form of the caption"/>
    </table-type>

    <!-- ************************************************************************** -->

    <table-type name="Lookup_Result_Type" abbrev="LkResTy" type="Enumeration">
        <enumerations>
            <enum>ID</enum>
            <enum>Caption</enum>
            <enum>Abbreviation</enum>
        </enumerations>
    </table-type>

    <table-type name="Lookup" type="Enumeration">
        <column name="group_name" type="text" size="32" descr="The group to which the lookup item belongs"/>
        <column name="sort_seq" type="integer" descr="The sorting sequence within the group (if sorting differently than the ID or Caption"/>
        <column name="result" lookupref="Lookup_Result_Type" descr="The type of result after a lookup (the value that should be used for the lookup -- the id or caption or abbreviation)"/>
    </table-type>

    <!-- ************************************************************************** -->

    <table-type name="Status"  class="com.netspective.axiom.schema.table.type.EnumerationTable">
        <xdm:template-param name="capsize" default="96"/>
        <xdm:template-param name="abbrevsize" default="32"/>

        <!-- we are overriding the "normal" enumeration table and creating our own type because our 'id' column
             points to a different foreign-key referencee class (this is so that columns that refer to this id aren't
             shown in the UI since they are designed for 'backend' processing) -->
        <column name="id" type="enumeration-id" primarykey="yes" descr="The value associated with a single enum" foreign-key-referencee-class="com.netspective.axiom.schema.column.type.RecordStatusIdColumn"/>
        <column name="caption" type="text" size="${params.capsize}" required="yes" descr="The name/text an end-user would see"/>
        <column name="abbrev" type="text" size="${params.abbrevsize}" unique="yes" descr="An abbreviated form of the caption"/>

        <enumerations>
            <enum id="0" abbrev="I">Inactive</enum>
            <enum id="1" abbrev="A">Active</enum>
            <enum id="99" abbrev="U">Unknown</enum>
        </enumerations>
    </table-type>

    <table-type name="Record_Status" abbrev="RecStatus" type="Status">
        <!-- nothing here yet, just a placeholder for later enhancements -->
    </table-type>

    <!--
    *********************************************************************
    ** Versioned tables - a versioned table contains a creation stamp and
    ** record status code that can uniquely identify any row with or
    ** without a primary key.
    *********************************************************************
    -->

    <table-type name="Versioned">
        <xdm:template-param name="recordStatusEnumTableName" default="Record_Status"/>

        <column name="record_status_id" lookup-ref="${params.recordStatusEnumTableName}" descr="The status of a row in the table">
            <sql-ddl>
                <default dbms="ansi">1</default>
            </sql-ddl>
        </column>
        <column name="cr_stamp" type="creation-stamp"/>
    </table-type>

    <!--
    *********************************************************************
    ** Relationship Tables and Enumerations
    *********************************************************************
    -->

    <!-- TODO: need to implement the class and template -->

    <table-type name="Relationship_Map" class="com.netspective.axiom.schema.table.type.RelationshipMapTable">
        <xdm:template-param name="relationshipTypeTable" required="yes"/>
        <xdm:template-param name="primaryIdColName" default="primary_item_id"/>
        <xdm:template-param name="relatedIdColName" default="related_item_id"/>
        <xdm:template-param name="primaryIdParentRef" required="yes"/>
        <xdm:template-param name="relatedIdLookupRef" required="yes"/>

        <description>
            This table type is used to store a mapping between relationships and their
            corresponding inverse relationship.  Its primary function is to ease the
            creation of an automated relationship field which will be able to update
            itself _and_ the record of the other half of the relationship.
            Thus, if a relationship exists between two organizations such that
            Org A is a child of Org B, when it comes time to insert that record,
            an intelligent relationship field will automatically determine that if
            Org A is a child of Org B, then Org B must be a parent of Org A and
            will create both those relationships.  Similarly, when it comes time
            to update a relationship, it will update the corresponding relationship
            as well.
        </description>

        <!-- it's crucial (because of the Java-code backing this table) that these be the last 3 columns in the table,
             which means that if you add any columns it should be to the beginning of this group -->
        <column name="rel_type_id" lookup-ref="${params.relationshipTypeTable}" indexed="yes" descr="The relationship type."/>
        <column name="${params.primaryIdColName}" parent-ref="${params.primaryIdParentRef}" descr="The owner of the relationship row this entry was created for"/>
        <column name="${params.relatedIdColName}" lookup-ref="${params.relatedIdLookupRef}" descr="The relationship row this entry was created for"/>

        <!-- required for the RelationshipMapTable class so that it knows the columns it is working with -->
        <primary-id-col-name>${params.primaryIdColName}</primary-id-col-name>
        <related-id-col-name>${params.relatedIdColName}</related-id-col-name>
    </table-type>

    <table-type name="Relationship_Type" type="Enumeration">
        <enumerations>
            <enum id="9990">Hierarchy: Self</enum>
            <enum id="9991">Hierarchy: Parent</enum>
            <enum id="9992">Hierarchy: Child</enum>
            <enum id="9993">Hierarchy: Ancestor</enum>
            <enum id="9994">Hierarchy: Descendent</enum>
            <enum id="9995">Hierarchy: Sibling</enum>
        </enumerations>
    </table-type>

    <table-type name="Relationship_Status" type="Status">
        <!-- nothing here yet, just a placeholder for later enhancements -->
    </table-type>

    <!--
    *********************************************************************
    ** Attribute tables and enumerations
    *********************************************************************
    -->

    <table-type name="Entity_Attribute_Category_Type" type="Enumeration">

    </table-type>

    <table-type name="Entity_Attribute_Type" type="Enumeration">
        <enumerations>
            <enum>Text</enum>
            <enum>Integer</enum>
            <enum>Float</enum>
            <enum>Date</enum>
            <enum>Duration</enum>
        </enumerations>
    </table-type>

    <table-type name="Entity_Attribute">
        <xdm:template-param name="parentIdColName" default="parent_id"/>
        <xdm:template-param name="parentRef" required="yes"/>
        <xdm:template-param name="categoryTypeLookupRef" required="yes"/>
        <xdm:template-param name="attributeTypeLookupRef" required="yes"/>

        <column name="${params.parentIdColName}" parent-ref="${params.parentRef}" descr="Reference to the parent of this attribute"/>
        <column name="attr_category_id" lookup-ref="${params.categoryTypeLookupRef}" descr="The attribute category"/>
        <column name="attr_type_id" lookup-ref="${params.attributeTypeLookupRef}" descr="The attribute category"/>
        <column name="attr_label" type="text" size="255" descr="The attribute's label (caption, name, etc.)"/>
        <column name="attr_value_index" type="integer" descr="The ordinal value (index) of the attribute value (if it's part of an array) or null if not important"/>
        <column name="attr_value_text" type="text" size="4096" descr="The attribute's text value (actual value may be in a type-specific table but this column has the text representation for display to the user)">
            <table name="${owner.name}_Text" abbrev="${owner.abbrev}Txt">
                <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
                <column name="parent_id" parentref="${owner.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
                <column name="value_index" type="integer" descr="The ordinal value (index) of the attribute value (if it's part of an array) or null if not important"/>
                <column name="text_value" type="text" size="4096" descr="The text value"/>
            </table>
            <table name="${owner.name}_Integer" abbrev="${owner.abbrev}Int">
                <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
                <column name="parent_id" parentref="${owner.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
                <column name="value_index" type="integer" descr="The ordinal value (index) of the attribute value (if it's part of an array) or null if not important"/>
                <column name="integer_value" type="integer" descr="The integral value"/>
            </table>
            <table name="${owner.name}_Float" abbrev="${owner.abbrev}Fl">
                <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
                <column name="parent_id" parentref="${owner.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
                <column name="value_index" type="integer" descr="The ordinal value (index) of the attribute value (if it's part of an array) or null if not important"/>
                <column name="float_value" type="float" descr="The floating-point value"/>
            </table>
            <table name="${owner.name}_Date" abbrev="${owner.abbrev}Dt">
                <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
                <column name="parent_id" parentref="${owner.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
                <column name="value_index" type="integer" descr="The ordinal value (index) of the attribute value (if it's part of an array) or null if not important"/>
                <column name="date_value" type="date" descr="The date value"/>
            </table>
            <table name="${owner.name}_Duration" abbrev="${owner.abbrev}Du">
                <column name="system_id" type="auto-inc" primarykey="yes" abbrev="sysid" descr="Unique record identifier"/>
                <column name="parent_id" parentref="${owner.getPrimaryKeyColumns().get(0).qualifiedName}" descr="The parent of this record"/>
                <column name="value_index" type="integer" descr="The ordinal value (index) of the attribute value (if it's part of an array) or null if not important"/>
                <column name="date" type="duration"/>
            </table>
        </column>
    </table-type>

</xdm:container>
