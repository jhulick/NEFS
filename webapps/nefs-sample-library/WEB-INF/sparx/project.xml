<?xml version="1.0"?>

<project xmlns:xdm="http://www.netspective.org/Framework/Commons/XMLDataModel">

	<!--
	**********************************************************************
	** NETSPECTIVE FRAMEWORKS' RESOURCE FILES                           **
	********************************************************************** -->

    <xdm:include resource="com/netspective/commons/conf/commons.xml"/>
    <xdm:include resource="com/netspective/axiom/conf/axiom.xml"/>
    <xdm:include resource="com/netspective/sparx/conf/sparx.xml"/>
    <xdm:include resource="com/netspective/sparx/conf/console.xml"/>

    <!--
    **********************************************************************
    ** PROJECT (GENERAL) SPECIFICATIONS                                 **
    ********************************************************************** -->

    <!-- setup the data access layer Singleton to point to our schema -->
<!--
    <listener class="app.Util"/>
-->

	<!--
	**********************************************************************
	** USER INTERFACE (PRESENTATION) SPECIFICATIONS                     **
	********************************************************************** -->

    <navigation-tree name="app" default="yes">
        <page name="home" default="yes" caption="Home">
            <panels style="horizontal">
                <panel type="command" command="query,library.get-all-assets,-,-,-,record-editor-compressed"/>
                <panel type="command" command="query,library.get-all-borrowers,-,-,-,record-editor-compressed"/>
            </panels>
        </page>

        <page name="asset" caption="Assets">
            <page name="view" caption="View Assets" command="query,library.get-all-assets,-,-,-,record-editor-compressed"/>
            <page name="add" caption="Add Asset" command="dialog,schema.db.Asset,add"/>
            <page name="edit" caption="Edit Asset" command="dialog,schema.db.Asset,edit" require-request-param="asset_id" retain-params="asset_id">
                <missing-params-body>
                   Please choose a book to edit from the &lt;a href='view'&gt; assets list&lt;/a&gt;.
                </missing-params-body>
            </page>
            <page name="delete" caption="Delete Asset" command="dialog,schema.db.Asset,delete" require-request-param="asset_id" retain-params="asset_id">
                <missing-params-body>
                   Please choose a book to delete from the &lt;a href='view'&gt; assets list&lt;/a&gt;.
                </missing-params-body>
            </page>
        </page>

        <page name="borrower" caption="Borrowers">
            <page name="view" caption="View Borrowers" command="query,library.get-all-borrowers,-,-,-,record-editor-compressed"/>
            <page name="add" caption="Add Borrower" command="dialog,schema.db.borrower,add"/>
            <page name="edit" caption="Edit Borrower" command="dialog,schema.db.borrower,edit" require-request-param="borrower_id" retain-params="borrower_id">
                <missing-params-body>
                   Please choose a book to edit from the &lt;a href='view'&gt; borrowers list&lt;/a&gt;.
                </missing-params-body>
            </page>
            <page name="delete" caption="Delete Borrower" command="dialog,schema.db.borrower,delete" require-request-param="borrower_id" retain-params="borrower_id">
                <missing-params-body>
                   Please choose a book to delete from the &lt;a href='view'&gt; borrowers list&lt;/a&gt;.
                </missing-params-body>
            </page>
        </page>

        <page name="console" caption="Console" redirect="console"/>
    </navigation-tree>

<!--
    *******************************************************************************************************************
    ** PROJECT DATA SOURCES CONFIGURATION                                                                            **
    ** ============================================================================================================= **
    ** Any data source called 'jdbc/default' will automatically be used as the default JDBC data source. If you wish **
    ** to change the name of the default data source, you may specify it as a tag in project.xml like the following: **
    ** <project>                                                                                                     **
    **     <default-data-source>jdbc/other</default-data-source>						                             **
    **														                                                         **
    ** Note that data sources specified under this connection provider will be managed by the Jakarta Commons DBCP   **
    ** If you wish to use JNDI, you simply have to specify the resource according to the server you're using.	     **
    *******************************************************************************************************************
    -->

    <connection-provider class="com.netspective.axiom.connection.JakartaCommonsDbcpConnectionProvider">

        <data-source name="jdbc/default">
            <driver-class>org.hsqldb.jdbcDriver</driver-class>
            <url>vs-expr:jdbc:hsqldb:${servlet-context-path:/WEB-INF/database/instance/db}</url>
            <user>sa</user>
            <password></password>
        </data-source>

    </connection-provider>

	<!--
	**********************************************************************
	** DATA MANAGEMENT STRUCTURE (SCHEMA) SPECIFICATIONS                **
	********************************************************************** -->

	<schema name="db">
		<xdm:include resource="com/netspective/axiom/conf/schema.xml"/>

        <table-type name="Entity">
            <column name="${owner.name.toLowerCase()}_id" type="auto-inc" primary-key="yes" descr="Unique identifier for ${owner.name}">
                <presentation>
                    <field name="${column.name}" type="integer" caption="ID" primary-key="yes"/>
                </presentation>
            </column>
        </table-type>

        <table-type name="Person" type="Entity">
            <column name="first_name" type="text" size="64" descr="The person's first name"/>
            <column name="last_name" type="text" size="64" descr="The person's last name"/>
        </table-type>

		<table name="Asset" abbrev="asset" type="Entity,Presentation">
            <column name="type" lookup-ref="Asset_Type" required="yes" descr="The type of asset"/>
			<column name="name" type="text" size="64" required="yes" descr="Name of the asset"/>
			<column name="quantity" type="integer" required="yes" descr="Count of number of assets available to loan"/>
		</table>

        <table name="Borrower" type="Person,Presentation">
            <!-- no columns are being added, it's just first name and last name -->
        </table>

        <table name="Asset_Loan" abbrev="asloan" type="Entity,Presentation">
            <column name="asset_id" parent-ref="Asset.asset_id" descr="The asset that was borrowed (a loan is owned by the Asset so it's a parent reference)">
                <presentation>
                    <field name="${column.name}" type="select" caption="Asset" choices="query:library.asset-names-for-select-field-choices"/>
                </presentation>
            </column>
            <column name="borrower_id" lookup-ref="Borrower.borrower_id" descr="The person that borrowed the asset">
                <presentation>
                    <field name="${column.name}" type="select" caption="Borrower" choices="query:library.borrower-names-for-select-field-choices"/>
                </presentation>
            </column>
            <column name="loan_type" lookup-ref="Loan_Type" descr="The type of loan"/>
            <column name="loan" type="duration" required="yes" descr="The duration of the loan"/>
            <column name="returned" type="boolean" descr="Whether the asset has been returned or not"/>
        </table>

		<table name="Asset_Type" abbrev="atype" type="Enumeration">
			<enumerations>
				<enum>Other</enum>
				<enum>Software</enum>
				<enum>Periodical</enum>
				<enum>Book</enum>
			</enumerations>
		</table>

		<table name="Loan_Type" abbrev="ltype" type="Enumeration">
			<enumerations>
				<enum>Short term</enum>
				<enum>Long term</enum>
			</enumerations>
		</table>
	</schema>

	<!--
	**********************************************************************
	** DATA MANAGEMENT QUERY (SQL) SPECIFICATIONS                       **
	********************************************************************** -->

    <queries package="library">

        <query name="get-all-assets">

            select asset_id, name, Asset_Type.caption, quantity,
                   (select count(*) from Asset_Loan where Asset_Loan.asset_id = asset_id),
                   (select count(*) from Asset_Loan where Asset_Loan.asset_id = asset_id and Asset_Loan.returned = 0)
            from Asset, Asset_Type
            where Asset.type = Asset_Type.id
            order by name;

            <presentation>
                <panel name="main" height="300">
                    <frame heading="static:All available assets"/>
                    <report>
                        <actions>
                            <action type="add" caption="Add Book" redirect="page-id:/asset/add"/>
                            <action type="edit" redirect="page-id:/asset/edit?asset_id=${0}"/> <!-- set to _ep.id=^{0} for encrypted parameter -->
                            <action type="delete" redirect="page-id:/asset/delete?asset_id=${0}"/>
                        </actions>
                        <column heading="ID" format="plain" redirect="page-id:/asset/edit?asset_id=${0}"/>
                        <column heading="Name" />
                        <column heading="Type"/>
                        <column heading="Quantity" align="right"/>
                        <column heading="Total Loans" align="right"/>
                        <column heading="Currently Out" align="right"/>
                    </report>
                </panel>
            </presentation>
        </query>

        <query name="get-all-borrowers">

            select borrower_id, last_name, first_name,
                   (select count(*) from Asset_Loan where Asset_Loan.borrower_id = borrower_id),
                    (select count(*) from Asset_Loan where Asset_Loan.borrower_id = borrower_id and Asset_Loan.returned = 0)
            from Borrower
            order by last_name, first_name

            <presentation>
                <panel name="main" height="300">
                    <frame heading="static:All available borrowers"/>
                    <report>
                        <actions>
                            <action type="add" caption="Add Borrower" redirect="page-id:/borrower/add"/>
                            <action type="edit" redirect="page-id:/borrower/edit?borrower_id=${0}"/> <!-- set to _ep.id=^{0} for encrypted parameter -->
                            <action type="delete" redirect="page-id:/borrower/delete?borrower_id=${0}"/>
                        </actions>
                        <column heading="ID" format="plain" redirect="page-id:/borrower/edit?borrower_id=${0}"/>
                        <column heading="Last Name" />
                        <column heading="First Name"/>
                        <column heading="Borrowed" align="right"/>
                        <column heading="Unreturned" align="right"/>
                    </report>
                </panel>
            </presentation>
        </query>

        <query name="asset-names-for-select-field-choices">

            select name, asset_id
            from Asset

        </query>

        <query name="borrower-names-for-select-field-choices">

            select (last_name + ', ' + first_name) as "Name", borrower_id
            from Borrower

        </query>

    </queries>
</project>
