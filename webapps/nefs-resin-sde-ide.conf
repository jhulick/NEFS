<!--
*******************************************************************************
**                                                                           **
**              NETSPECTIVE ENTERPRISE FRAMEWORKS SUITE (NEFS)               **
**     SOFTWARE DEVELOPMENT ENVIRONMENT (SDE) RESIN CONFIGURATION FILE.      **
**                                                                           **
** This file contains Resin configs for developing and unit testing NEFS     **
** code. This file assumes that all the test apps are pointing to            **
** NEFS_HOME/support/ide/classes for compiled class files and are pointing   **
** to NEFS_HOME/[X]/lib/redist/*.jar for all the framework-required JAR      **
** files. Also, each of the test apps have their /sparx/* path mapped to the **
** NEFS_HOME/Sparx/resources physical directory. Because of the path-mapping **
** requirement, <war-dir> is not used and instead each test app is           **
** automatically created using a <web-app> URL mapping tags.                 **
**                                                                           **
** This file assumes that NEFS_HOME is C:\Projects\Frameworks. If your SDE   **
** workstation has the NEFS_HOME as something else, then do the following:   **
**                                                                           **
**   Change C:\Projects\Frameworks in <doc-dir> on line 33 to your path.     **
**                                                                           **
** @author Shahid N. Shah                                                    **
*******************************************************************************
$Id: nefs-resin-sde-ide.conf,v 1.4 2004-02-16 17:26:06 shahid.shah Exp $
-->

<caucho.com>

    <log id='/log' href='stderr:' timestamp='[%Y-%m-%d %H:%M:%S.%s]'/>

    <java compiler="internal" compiler-args=""/>
    <jsp precompile='true' static-encoding='true' recompile-on-error='true'/>

    <http-server>
        <doc-dir>C:\Projects\Frameworks</doc-dir>
        <http port='8099'/>
        <srun host='127.0.0.1' port='6899'/>

        <!--
           - If starting bin/httpd.sh as root on Unix, specify the user name
           - and group name for the web server user.  Note: Linux users must
           - either have the new thread package (RedHat 9.0 or later) or use
           - bin/resin.
           -
           - <user-name>resin</user-name>
           - <group-name>resin</group-name>
          -->

        <class-update-interval>2s</class-update-interval>
        <servlet-classloader-hack>false</servlet-classloader-hack>
        <caucho-status>true</caucho-status>
        <thread-max>150</thread-max>
        <thread-keepalive id='100'/>
        <request-timeout id='65s'/>
        <accept-buffer-size id='256'/>
        <thread-min id='5'/>
        <ignore-client-disconnect>true</ignore-client-disconnect>

        <cache dir='cache' size='1024' entries='8192'/>
        <cache-mapping url-pattern='/' expires='2s'/>

        <servlet-mapping url-pattern='*.jsp' servlet-name='jsp'/>
        <servlet-mapping url-pattern='/servlet/*' servlet-name='invoker'/>

        <welcome-file-list>index.jsp, index.html</welcome-file-list>

        <!-- make sure to use Xerces and Xalan and not Resin XML/XSLT parsers! -->
        <system-property javax.xml.transform.TransformerFactory="org.apache.xalan.processor.TransformerFactoryImpl"/>
        <system-property javax.xml.parsers.DocumentBuilderFactory="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl"/>
        <system-property javax.xml.parsers.SAXParserFactory="org.apache.xerces.jaxp.SAXParserFactoryImpl"/>

        <!-- default host if no other host matches -->
        <host id=''>
            <access-log id='logs/nefs-access.log'
                format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"'
                rollover-period='1W'/>

            <error-log id='logs/nefs-error.log'/>

            <!--
            *********************************************************************
            * Setup the URL mapping so that any application requested is mapped *
            * to webapps/<app-name>.                                            *
            *********************************************************************
            -->
            <web-app url-regexp='/([^/]*)' app-dir='webapps/$1'>
                <!--
                *********************************************************************
                * The following classpaths are required for locating web-app's      *
                * auto-compiling classes and all the jars.                          *
                *********************************************************************
                -->
                <classpath id='WEB-INF/classes' source='WEB-INF/classes' compile='true'/>
                <classpath id='WEB-INF/lib' library-dir='true'/>

                <!--
                *********************************************************************
                * The following classpaths are designed for developers that are     *
                * actively modifying frameworks (like Sparx) and are using an IDE.  *
                * The convenience is that the developer can point to the compiled   *
                * class files without having to copy them into JARs and placing it  *
                * within an application's WEB-INF.                                  *
                *                                                                   *
                * The Netspective Frameworks classes are found in this folder:      *
                * NEFS_HOME/support/ide/classes                                     *
                *********************************************************************
                -->

                <!-- all the compiled .class files from the IDE go here -->
                <classpath id='${server.docDir}/support/ide/classes' compile='false'/>

                <!-- all the 3rd party redistributable library files -->
                <classpath id='${server.docDir}/Commons/lib/redist' library-dir='true'/>
                <classpath id='${server.docDir}/Axiom/lib/redist' library-dir='true'/>
                <classpath id='${server.docDir}/Sparx/lib/redist' library-dir='true'/>

                <!-- these are added because of com/netspective/<lib>/conf/*.xml resource files are here -->
                <classpath id='${server.docDir}/Commons/src/java/main' compile='false'/>
                <classpath id='${server.docDir}/Axiom/src/java/main' compile='false'/>
                <classpath id='${server.docDir}/Sparx/src/java/main' compile='false'/>

                <!-- needed to find Sparx/resources directory for NavigationControllerServlet WebResourceLocator for SDE -->
                <classpath id='${server.docDir}' compile='false'/>

                <!-- needed to find java-doc-xml/* files (resources/java-doc-xml)-->
                <classpath id='${server.docDir}/Sparx' compile='false'/>

                <!-- needed to find commons-logging and log4j.properties files in case apps don't have them -->
                <classpath id='${server.docDir}/Commons/conf'/>

                <!--
                *********************************************************************
                * The following path-mapping entry is only required for developers  *
                * that are actively modifying Sparx resources. The convenience is   *
                * that the developer can point to the resources in the main Sparx   *
                * codebase without copying them into the web application.           *
                *********************************************************************
                -->
                <path-mapping url-pattern='/sparx/*' real-path='${server.docDir}/Sparx/resources'/>

                <!--
                *********************************************************************
                * All other settings should be non-Resin-specific and are found in  *
                * APPROOT/WEB-INF/web.xml                                           *
                *********************************************************************
                -->
            </web-app>
        </host>

    </http-server>
</caucho.com>
