<?xml version="1.0"?>

<netspective>
    <release>
        <product name="Sparx" version="7.1.2"/>
        <change-log>
            <summary>Major enhancements</summary>
            <change-log-entry>
                <![CDATA[
                Added new method for for defining custom logic or action for execution of a dialog. This model is
                probably the best model for most types of customization because action classes may be written as
                standard Java beans with no reference to the Sparx framework packages. Inversion of Control (IoC)
                using Java reflection is used to analyze the bean and use setXXX() style calls to the action class to
                set the dialog's fields values in a type-safe manner. Then, once all the field values are set, a simple
                execute() method is called giving the action class a chance to perform some process. After execution,
                the action class can either delegate the next action processing back to the framework or provide a
                framework-independent way of providing the next action's URL (like through workflow analysis). See
                <a href="http://www.netspective.com/community/kb.php?mode=article&k=4">this tutorial</a> for an example
                of how to use the new feature.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added feature that allows insertion template code for Schema Record Editors so that it will be able to
                handle insertion of multiple rows when there is a "_loop-column" attribute present. This new attribute
                signifies that multiple rows should be inserted based on the number of values assigned to the specified
                column. This is useful for cases where a select field returns multiple values.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Updated the display of the state values in dialog debug code so that they show all the values when
                the field can contain multiple values (e.g SelectField). The displayed format in the Dialog Context
                Debug panel will be "[x, y, z]" for fields that can have multiple values. Normal fields will still
                display "x" as before.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Commons" version="7.1.1"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                Added new reset() method to the ValidationContext interface that allows resetting the validation
                context to its initial state (valid with no errors). Useful if there is a need to clear the context.
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added a new ESCAPE_HTML flag to the &lt;column&gt; tag so that if it is a GeneralColumn and flag is set,
                then any HTML provided as part of the column data will be escaped automatically. Usage:
                &gt;column ... escape-html="yes"/&gt;.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.1.1"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                <![CDATA[
                Refactored the AnsiDatabasePolicy so that the DDL generator and the DDL formats are delegated to
                separate classes and their parameters may be specified via XDM. For example, now when defining the
                database policy programmers can override one or more of the DDL format attributes by creating a
                <ddl-formats> or specify an alternate DDL generator by using the <ddl-generator class="x.y.z"/>.
                <br>
                &lt;project><br>
                &nbsp;&nbsp;....<br>
                &nbsp;&nbsp;&lt;database-policy class="com.netspective.axiom.policy.SqlServerDatabasePolicy"><br>
                &nbsp;&nbsp;&nbsp;&nbsp;&lt;ddl-formats><br>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;create-table-clause-format>create table tableSpace.${table.name}&lt;/create-table-clause-format><br>
                &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ddl-formats><br>
                &nbsp;&nbsp;&lt;/database-policy><br>
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.1.1"/>
        <change-log>
            <summary>Minor enhancement</summary>
            <change-log-entry>
                <![CDATA[
                Changed the HTML generated for the Calendar popup in the DateTime field. The previous version had a '#'
                in the anchor (&lt;a href='#' onclick="showCalendar(...)">). Because of the '#' in the href whenever the
                calendar was shown it was scrolling the screen to the top of the page, which was an undesirable effect.
                Now the generated popup uses a <span> tag instead of the &lt;a> tag and won't touch the active scroll
                location.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Commons" version="7.1.0"/>
        <change-log>
            <summary>Minor bug fix, enhancements, and code roll-up</summary>
            <change-log-entry>
                <![CDATA[
                In TextValueValidationRule, optimized the regular expression handling so that a pattern is created,
                cached, and reused by a matcher instead of being recreated for each call to isValid(). Also added better
                error messages when text validation fails. <b>API CHANGE:</b> if you use the regular expression validation
                you should no longer prefix or suffix the reg-ex with '/'. For example, if you used <code>/[A-z]*/</code> in the past,
                now you should just use <code>[A-z]*</code> without the '/' at the beginning and end. If you now include
                '/' as part of the expression, it will be considered a requirement in the pattern.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added new validation, <code>TimeZoneValidationRule</code>, for timezones using the TimeZone class. Also added
                validation class called <code>InternetHostnameValidationRule</code> for validating internet hostnames and IPs.
                ]]>
            </change-log-entry>
            <change-log-entry>
                The MultipleUriAddressableFileLocators cache was storing the locator instead of the resource.
                Bug fixed so that the cache now stores the resource; this was causing a ClassCastException if the cache
                was in use (but no error if the cache was ignored).
            </change-log-entry>
            <change-log-entry>
                 Added new DelimitedValuesParser class useful for parsing comma-separated values (CSV) input.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.1.0"/>
        <change-log>
            <summary>Major enhancements and code roll-up</summary>
            <change-log-entry>
                <![CDATA[
                Added new <i>starts-with-ignore-case</i> and <i>ends-with-ignore-case</i> SQL comparisons.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added capability for DAL import XML files to import CSV delimited text entries. Introduced two new 'dal:csv'
                and 'dal:csv-file' attributes that perform the action. For example, in the 'initial-and-test-data.xml' you can now do the following:
                <pre>
&lt;dal xmlns:dal="...">
  &lt;table-name dal:csv="X,Y,Z"/>
  &lt;table-name dal:csv-file="c:\X\data.csv"/>
&lt;/dal></pre>
                The first version (dal:csv) supports a single line of CSV and you may include as many as necessary.
                The second points to a file. In either version, all
                columns must be provided in the order they were defined in the Schema XML.  Be sure to add the
                xmlns:dal="http://www.netspective.org/Framework/Axiom/DataAccessLayer" namespace in the <dal> tag and
                replace the table name. There is a complete example available in the nefs-sample-books WEB-INF/database/data/initial-and-test-data.xml file.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.1.0"/>
        <change-log>
            <summary>Major enhancements and code roll-up</summary>
            <change-log-entry>
                <![CDATA[
                <b>API CHANGE:</b> if you use the regular expression validation (reg-expr attribute) in TextField,
                you should no longer prefix or suffix the reg-expr value with '/'. For example, where you used <code>reg-expr="/[A-z]*/"</code> in the past,
                now you must just use <code>reg-expr="[A-z]*"</code> without the '/' at the beginning and end. If you include
                '/' as part of the expression, it will be considered a requirement in the pattern.
                ]]>
            </change-log-entry>
            <change-log-entry>
                Made change to DateTimeField so that if the size or max-length attributes are provided they override
                the format pattern length. Before this change, even if a 'size' or 'max-length' was provided,
                they were not honored (it always used the length of the date/time format pattern).
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Upgraded the DHTML calendar JavaScript library from 0.9.2 to 0.9.6. The source of the library remains
                <a href="http://dynarch.com/mishoo/calendar.epl">Mishoo DTHML Calendar</a>. The older version at
                Sparx/resources/theme/common/calendar-0.9.2 is now no longer in the CVS repository and is replaced by
                the Sparx/resources/theme/common/jscalendar-0.9.6 directory. <b>API CHANGE:</b> If you have your own navigation skin, please
                be sure to update the reference to the new directory. For example, if you have a reference to
                theme.getResourceUrl("/calendar-0.9.2/calendar-win2k-1.css") it needs to change to
                theme.getResourceUrl("/jscalendar-0.9.6/calendar-win2k-1.css").
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added new navigation page flag called <i>hidden-unless-active</i> that works just like the hidden flag
                which keeps a page from being clicked by a user. However, this one is different in that once a page is
                active then the menu item will appear and be clickable.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Created a new GUI component called <b>panel editor</b> which contains children elements that are
                comprised of a <i>content</i> and a <i>dialog</i>  for editing the <i>content</i>.  The dialog is for
                adding, editing, and deleting information related to the <i>content</i> of the panel editor child element.
                Currently, the panel editor supports <b>report</b> type children elements whose <i>content</i> is a report.
                An example of a declaration of panel editor is shown below:
                <pre>
&lt;panel-editors package="X">
    &lt;panel-editor  name="Y" require-request-param="Z">
        &lt;frame heading="Sample Panel Editor"/>
        &lt;element type="report" name="X" pk-column-index="0">
            &lt;dialog>
                ...
                ...
            &lt;/dialog>
            &lt;query>
                ...
                ...
            &lt;/query>
        &lt;/element>
        &lt;element .../>
    &lt;/panel-editor>
&lt;/panel-editors></pre>
                As you can see, the panel editors are defined using a package similar to dialogs and queries. Each
                panel editor can have multiple child elements and each element will have their own content declaration (in
                this case, a query and a dialog). The dialog will be used to add, edit, and delete records related to
                the query. The dialog doesn't have to be defined inside the panel editor and can be referenced using the
                <code>dialogRef</code> attribute. The attribute <code>pk-column-index</code> is used to define
                which column from the query report should be used for edit and delete actions. A panel editor can be invoked using commands like:
                <code>command="panel-editor,X.Y"</code>. Panel editors are demonstrated
                in the nefs-sample-medigy sample app.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added a new field type called <b>Section</b> which is similar to the Composite field. The new field allows
                grouping of fields based on how you want to lay them out in the dialog. The main idea behind this field is
                to allow different layouts within the dialog without having to extend from existing field classes. Currently, this
                field is NOT SUPPORTED in the default dialog skin. A new skin named <i>modern</i> will be introduced
                later on that will support this new field type.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added a new attribute for the Select field called <code>max-item-per-row</code> to support grouping for
                checkboxes. By default, the value is 1 and all checkboxes are displayed in one column. When the value is set
                to 2, the checkboxes will be displayed in two columns.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                <code>HtmlTabularReport</code> interface now includes an extra method called addActions()
                and <code>BasicHtmlTabularReport</code> implements it. <b>API CHANGE:</b> All classes that directly implement the interface
                WILL BREAK until the new method is implemented.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Fixed problem where the dialog's retain-param values were being saved as hidden fields with a
                value of "null" (4 char) instead of an empty string.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.21"/>
        <change-log>
            <summary>Minor bug fixes and enhancements</summary>
            <change-log-entry>
                Added a new rule that a field that is hidden on the client side should not have the required validation
                rule run (on the client side). The server side check remains the responsibility of the programmer but a
                sample is provided in the NEFS Sampler application's "Sample Conditionals" input dialog example to
                help show how the server side can be done by adding a second conditional tag.  NOTE: this change was
                made to the dialog.js (JavaScript) file so be sure to update your local APP_ROOT/sparx folder (use
                the upgrade instructions found on this site).
            </change-log-entry>
            <change-log-entry>
                Added 'summary' and 'description' properties to Navigation Pages so that skins may use those attributes
                to provide simple help or descriptions about the usage of pages. See the NEFS Sampler's 'container'
                body type for how it can be put to use.
            </change-log-entry>
            <change-log-entry>
                Added new panel layout style called "two-columns-stacked" which displays child panels in two columns.
                The child panels in each column are stacked on top of one another without row alignment like in
                "two-columns" style.
            </change-log-entry>
            <change-log-entry>
                Corrected defect which was causing query definitions to remember the last input after done button was
                pressed. The symptoms were that even after the done button was pressed and new input criteria was added
                to the dialog only the previous query was being executed. Also put in a workaround which was causing
                IE to lose the Servlet Session ID by putting in a getSession() call at the top of the navigation
                controller's doGet() method.
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Renamed and changed the method hideHeading() to isHideHeading(HtmlValueContext vc) in HtmlPanelFrame.
                The name change was to follow bean naming scheme and the method signature change was to check for
                panel flags set in the panel context. This is <b>an API change</b> and skins that use this method to draw
                panel frames <b>MUST</b> be modified.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Modified the way the panel frame checks to see if the heading should be displayed or not. Instead of relying
                only on the frame flag, HIDE_HEADING, it will also check the context specific panel flag, RENDERFLAG_HIDE_FRAME_HEADING.              
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Modified the BasicHtmlPanelSkin to display the top border when the heading of the panel
                is not displayed.
                ]]>
            </change-log-entry>
        </change-log>
    </release>
    <release>
        <product name="Sparx" version="7.0.20"/>
        <change-log>
            <summary>Minor bug fixed and enhancements</summary>
            <change-log-entry>
                <![CDATA[
                Fixed problem where the <i>no/false</i> option for the <i>radio</i> style of the BooleanField
                was not being set by a default XML setting.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added two new methods to the BooleanField's value object: isNeither() and allowNeither(). The latter
                method is to check whether or not if the current field configuration allows the display of the "neither"
                option. The former method is to check if the "neither" option is selected.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                The <i>radio</i> style for the BooleanField will default to false if no default value is
                specified because according to the HTML specs, one radio button MUST always be selected.
                If the "neither" option is available (by setting the <i>none-text</i> attribute), then
                the "neither" option will be the default value when no default value is specified in XML.
                ]]>
            </change-log-entry>
            <change-log-entry>
                In login-manager's login-attempts-listener class, implemented usage of the simple max attempts reached
                message in addition to providing a template body. This allows max attempts to be prevented with either
                a simple message or a more elaborate template.
            </change-log-entry>
            <change-log-entry>
                In send-mail dialog execute handler, the to/cc/bcc recipients now allow multiple comma-separated e-mail
                addresses to be entered.
            </change-log-entry>
            <change-log-entry>
                Added convenience method to access column values of each row of a grid in a GridField dialog context
                bean. The new convenience method allows row-number-based access to values.
            </change-log-entry>
        </change-log>
    </release>
    <release>
        <product name="Sparx" version="7.0.19"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                <![CDATA[
                Modified the default dialog skin to only display the hint of a field if the corresponding
                input is displayed.
                ]]>
            </change-log-entry>
        </change-log>
    </release>
    <release>
        <product name="Commons" version="7.0.7"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                <![CDATA[
                Modified PresentationValue so that it returns an empty list of items when the text value
                is null or is an empty string.
                ]]>
            </change-log-entry>
        </change-log>
    </release>
    <release>
        <product name="Sparx" version="7.0.18"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                <![CDATA[
                Added createErrorPage(Class) method to NavigationTree/Page so that &lt;error-page class="x.y.z"&gt; may be defined
                through XML instead of only instantiated through Java. Prior to this change custom error pages could only
                be defined through Java (in a custom page constructor).
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added new NavigationSqlErrorPage class that could be used to handle specific SQL error codes. Now the
                following would work: &lt;error-page class="com.netspective.sparx.navigate.error.NavigationSqlErrorPage" sql-code="123"&gt;
                or &lt;error-page class="...NavigationSqlErrorPage" start-sql-code="123" end-sql-code="456"&gt;
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.0.12"/>
        <change-log>
            <summary>Minor enhancement</summary>
            <change-log-entry>
                <![CDATA[
                Changed the behavior of the &lt;sql-ddl&gt;&lt;default&gt; tag so that the contents of the default tag are no
                longer quoted, Instead, the content is treated as a SQL expression. <b>Note:</b> this will break existing
                code that depends upon the &lt;sql-ddl&gt;&lt;default&gt; tag automatically generating quoted strings. Now, if
                quotes are needed in the contents of the &lt;sql-ddl&gt;&lt;default&gt; they must be added manually.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.17"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                Add label for HTML form elements, column headers for data tables, and alt for auto generated images for
                the CFR Section 508 compliance requirements and enhanced accessibility.
            </change-log-entry>
            <change-log-entry>
                Fixed problem where large values in CurrencyField were being submitted with the exponential symbol
                (e.g 1.234E3). The solution was to use the DecimalFormat to force the format of the double value.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.0.11"/>
        <change-log>
            <summary>Minor enhancement</summary>
            <change-log-entry>
                <![CDATA[
                Added a minor enhancement to the stored procedure feature to support a new
                datatype, <code>CHAR</code>. Developers can utilize this new data type for stored procedure parameters
                using the following setting: <code>sql-type="char"</code>.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.16"/>
        <change-log>
            <summary>Minor bug fixes</summary>
            <change-log-entry>
                Added a default empty constructor to StandardDialogSkin so that extending
                child classes can be registered using XDM.
            </change-log-entry>
            <change-log-entry>
                The 'hasValue' check in DialogFieldConditionalApplyFlag class was only
                checking for NULLs. It is more logical to check for zero length values
                (after stripping spaces). This way values being checked MUST contain an actual
                non-zero length string for the 'hasValue' check to return TRUE.
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Removed getSelectedItem() method from the SelectField's value object
                because this method was misleading and does not work for select fields that
                allow multiple selections. The best way to get values from a select field is to
                do a getTextValue() or getTextValues() on the state value object. <b>NOTE</b>:
                This breaks current code and you will need to MODIFY your code. For example:
                myDialogContext.getMySelectField().getSelectedChoice() MUST be changed to
                myDialogContext.getMySelectFieldState().getValue().getTextValue()  or
                myDialogContext.getMySelectFieldState().getValue().getTextValues()  based on the number of
                values you are expecting from the select field.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.15"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                Fixed problem where the HtmlPanelBanner class was using HtmlPanelActions to delegate action handling
                but had its own style (horiz/vertical) attribute and not passing the style over to the HtmlPanelActions.
                Now, the style is delegated and should work in horizontal or vertical mode.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.0.10"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                Fixed problem in JndiConnectionProvider.getAvailableDatasources() that was causing an NPE when no
                datasources were defined. This caused a problem in the Console Metrics page for those projects that did
                not have datasources (like nefs-sampler).
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.0.9"/>
        <product name="Sparx" version="7.0.14"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                Fixed problem where overriding stored procedure parameters were not being used. The fix changes the
                existing StoredProcedure.execute(...) API with the introduction of two variables for the overrding
                parameters instead of just one. e.g. sp.execute(Context, int[] , Object[] , boolean).
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.13"/>
        <change-log>
            <summary>Minor bug fixes</summary>
            <change-log-entry>
                Fixed another bug associated with cases where duplicates were being checked for edit mode when the
                associated record being searched did not have a valid primary key (because it allows INSERT when primary
                key is not found).
            </change-log-entry>
            <change-log-entry>
                Fixed problem where a NPE is thrown when no named servlet request attribute exists for request: value source.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.12"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                Fixed bug for cases when primary key value is null in SchemaRecordEditor dialog.
                See http://www.netspective.com/community/viewtopic.php?p=203#203 for discussion of problem.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.0.8"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                Modified the generated where expr generation in query definitions using the contains-ignore-case condition
                so that UPPER() method is used on both sides of the comparison check even where there is no explicit
                bind expression defined.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Commons" version="7.0.6"/>
        <change-log>
            <summary>Minor bug fixes</summary>
            <change-log-entry>
                Added overriden method getSpecification() since ConcatenateValueSource by itself does not have a VS
                specifcation defined. This was throwing a NPE in QueryParameter.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.0.7"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                Perform better type management by allowing improved numeric type conversions between numeric columns.
                Now, numeric types should be able to convert from double to float, float to double, short to long,
                long to short, etc assuming the numers are not out of bounds.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Commons" version="7.0.5"/>
        <change-log>
            <summary>Minor enhancement</summary>
            <change-log-entry>
                Added ability for InputSourceLocator to track ending line number and starting/ending columns for tags.
                This allows extraction of source code from XML source files for presenting to the user or to use in
                development tools like Console.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.11"/>
        <change-log>
            <summary>Minor bug fixes and enhancements</summary>
            <change-log-entry>
                Moved the makeStateChanges call from the NavigationContext into the NavigationControllerServlet so that
                makeStateChanges is called after all login and security checks are conducted.
            </change-log-entry>
            <change-log-entry>
                Ensure that dialogs and command panels do not eat exceptions. In order for &lt;error-page&gt; to work,
                exceptions must be propogated.
            </change-log-entry>
            <change-log-entry>
                Cleaned up the has-permissions and lack-permissions conditon checks.
            </change-log-entry>
            <change-log-entry>
                Instead of setting the active login manager using BasicDbHttpServletValueContext
                REQATTRNAME_ACTIVE_LOGIN_MANAGER request attribute, now allowing the getActiveLoginManager() method to
                directly query the NavigationControllerServlet.
            </change-log-entry>
            <change-log-entry>
                Delegated the checking of whether a dialog is in auto execute mode to the dialog. This refactoring was
                necessary so that the dialog (and not the dialog context) could decide if it was currently in
                auto-execute mode.
            </change-log-entry>
            <change-log-entry>
                Removed overloaded setChoices(String[] choices) from SelectField.java and moved the functionality into
                the constructor and setItems() methods of SelectFieldChoicesValueSource.
            </change-log-entry>
            <change-log-entry>
                Added new "record-editor-added-row-pk" value source that allows access to recently added schema record
                editor row primary key values.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.10"/>
        <change-log>
            <summary>Minor enhancement</summary>
            <change-log-entry>
                Added a new user authentication and login simulation feature. Now, during testing and other phases
                programmers can "soft-code" a simulated user, org, roles, and other AuthenticatedUser functionality
                in the project XML file.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.9"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                Added check for authUser not being null before checking for permissions.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.8"/>
        <change-log>
            <summary>Third-party library upgrade</summary>
            <change-log-entry>
                Upgraded to freemarker 2.3 pre 15 that should fix the nasty MRU cache NPE.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.7"/>
        <change-log>
            <summary>Minor bug fixed</summary>
            <change-log-entry>
                Required the NavigationTree to be supplied in the NavigationPath/Page constructor. This is necessary
                for the &lt;page-type&gt; template tag to work properly (because it needs a valid namespace).
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Sparx" version="7.0.6"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                <![CDATA[
                Added new Radeox wiki parser and template processor. Now you can define a page like the following:<p>
                <code>
                &lt;page ...><br>
                    &nbsp;&nbsp;&nbsp;&lt;body type="wiki" source-file="name-of-file-value-source"/><br>
                    &nbsp;&nbsp;&nbsp;&lt;body type="wiki" source-value="value-source-with-content"/><br>
                    &nbsp;&nbsp;&nbsp;&lt;body type="wiki"><br>
                       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;snipSnap wiki content filters and macros<br>
                    &nbsp;&nbsp;&nbsp;&lt;/body><p>
                </code>
                This allows treating the content of a page (or panel) as Wiki text instead of freemarker or other templating system.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Commons" version="7.0.4"/>

        <change-log>
            <summary>Minor enhancement</summary>
            <change-log-entry>
                Allowed template processor to become a template consumer. This allows templates like &lt;template-processor-type
                name="abc" class="x.y.z"/&gt; to be defined in xml and then later used like &lt;body type="abc"/&gt;.
            </change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Commons" version="7.0.3"/>
        <change-log>
            <summary>Minor Bug Fixed</summary>
            <change-log-entry>Added nullity check that was preventing the Project DTD from being generated after store procedures were added.</change-log-entry>
        </change-log>
    </release>

    <release>
        <product name="Axiom" version="7.0.6"/>
        <change-log>
            <summary>Minor bug fixes and enhancements</summary>
            <change-log-entry>
                Fixed problem where the 'query' value source was complaining and not setting certain result styles.
            </change-log-entry>
            <change-log-entry>
                Added ability to return an accessor based on Index instead of only a column since indexes could
                have more than one column.
            </change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Sparx" version="7.0.5"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                Added special validation in the SchemaRecordEditorDialog to make sure that when updating and inserting a record
                unique constrains are not violated.  This additional validation takes into account unique columns and indexes
                so that if a combination of a set of columns need to be unique, that constraint is checked against the database
                before updating or inserting that row.
            </change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Axiom" version="7.0.5"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                Added special check in Update DML SQL for auto-inc columns. Now, if an auto-inc column is being updated
                the database policy will be queried to see if it should be removed from the Update DML SQL statement.
            </change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Sparx" version="7.0.4"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>
                Added new StandardTemplateNavigationSkin that allows freemarker-template based navigation skins.
                This allow non-java-based navigation skins to be created for content-heavy sites (as opposed to app-heavy sites).
            </change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Commons" version="7.0.2"/>
        <change-log>
            <summary>Minor refactoring</summary>
            <change-log-entry>Moved the redirect value source to be auto registered (was previously in sparx.xml but it shouldn't have been there).</change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Axiom" version="7.0.4"/>
        <change-log>
            <summary>Minor enhancements</summary>
            <change-log-entry>When generating the SQL to retrieve, insert, update or delete records, there is an option now to prefix the
                table names with the schema name.  This useful when the tables are owned by a different user than
                the one specified in the data source for connectivity.</change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Sparx" version="7.0.3"/>
        <change-log>
            <summary>Minor bug fixes and enhancements</summary>
            <change-log-entry>
                Fixed problem where tabbed panels did not remember their state across page views. Now cookies are
                being set properly so that minimized panels and tabbed panels do proper state management.
            </change-log-entry>
            <change-log-entry>
                Fixed problem where Console was logging out erroneously after a few page views on IE. It seems that
                IE has a limit to the number of cookies allowed and after too many cookies it starts removing older
                cookies (which kills JSESSIONID). Now,
                Sparx 7.0.3 has consolidated numerous cookies into a smaller
                number to help prevent against accidental removal of JSESSIONID. This problem was specific to
                IE and did not seem to affect Mozilla or Safari.
            </change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Axiom" version="7.0.3"/>
        <change-log>
            <summary>Minor bug fixes</summary>
            <change-log-entry>When locating the JDBC driver class in &lt;connection-provider&gt;, error message now shows the actual
                driver class and not the value source spec in case the class is not found.</change-log-entry>
            <change-log-entry>
                In SQL DDL generator, added check to see if column is required by app or dbms in order to generate the NOT NULL constraint.
                Before this change, only the isRequiredByDmbs() flag was checked.
            </change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Sparx" version="7.0.2"/>
        <change-log>
            <summary>Minor bug fixes</summary>
            <change-log-entry><![CDATA[In
                <code>com.netspective.sparx.theme.basic BasicHtmlTabularReportPanelSkin</code>, updated the
                code to check if the
                <code>title</code> attribute of the
                <code>panel/report/actions/action</code> tag is
                not null before rendering it. This
                <code>title</code> attribute is typically only used in selectable
                reports.]]>
            </change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Axiom" version="7.0.2"/>
        <change-log>
            <summary>Minor code cleanup</summary>
            <change-log-entry>Removed some System.out debugging statements left in the stored procedure classes.</change-log-entry>
        </change-log>
    </release>


    <release>
        <product name="Commons" version="7.0.1"/>
        <product name="Axiom" version="7.0.1"/>
        <product name="Sparx" version="7.0.1"/>
        <change-log>
            <summary>New features</summary>
            <change-log-entry>
                <![CDATA[
                Improved support for error pages with additional features in &lt;navigation-tree&gt;'s and
                &lt;page&gt;'s &lt;error-page&gt; tag.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Changed the delimiter of the
                <code>ListValueSourceCommand</code> from comma
                <code>[,]</code> to
                pipe
                <code>[|]</code> so that embedded value sources in the command will work properly. Before this
                change, only value sources that didn't contain commas in their specs were allowed.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Changed the rule for DialogContext Beans generation so that only
                <code>&lt;dialog&gt;</code> tags that have the
                <code>&lt;dialog ... generate-dcb="yes"/&gt;</code> attribute will generate dialog context beans.
                ]]>
            </change-log-entry>
            <change-log-entry>
                <![CDATA[
                Added new attribute called
                <code>allow-execute-with-cancel-button</code> to the
                <code>&lt;dialog&gt;</code> tag which allows
                execution of the dialog even when the Cancel button is pressed. Currently it is up to the developer
                to check for it and do the appropriate action in the execution listeners.
                ]]>
            </change-log-entry>
        </change-log>
    </release>

</netspective>