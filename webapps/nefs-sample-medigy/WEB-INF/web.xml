<?xml version="1.0"?>

<web-app>
    <!--
    *********************************************************************
    * The following classpath and path-mapping entries will work only   *
    * in Resin (2.1 or above) and are designed for developers that are  *
    * actively modifying frameworks (like Sparx) and are using an IDE.  *
    * The convenience is that the developer can point to the compiled   *
    * class files without having to copy them into JARs and placing it  *
    * within an application's WEB-INF.                                  *
    *********************************************************************
    -->

    <classpath id='${app.docDir}/../../Commons/conf'/>
    <classpath id='${app.docDir}/../../Commons/lib/redist' library-dir='true'/>
    <classpath id='${app.docDir}/../../Axiom/lib/redist' library-dir='true'/>
    <classpath id='${app.docDir}/../../Sparx/lib/redist' library-dir='true'/>
    <classpath id='${app.docDir}/../../tools/idea/classes'/>
    <!-- these are added because of conf/*.xml resource files are here -->
    <classpath id='${app.docDir}/../../Commons/src/java/main' compile='false'/>
    <classpath id='${app.docDir}/../../Axiom/src/java/main' compile='false'/>
    <classpath id='${app.docDir}/../../Sparx/src/java/main' compile='false'/>
    <!-- needed to find java-doc-xml/* files -->
    <classpath id='${app.docDir}/../../Sparx' compile='false'/>

	<path-mapping url-pattern='/sparx/*' real-path='${app.docDir}/../../Sparx/resources'/>

    <!--
    *********************************************************************
    * Setup application front-controller servlet                        *
    * 1) The SparxNavigationController servlet handles all requests     *
    * 2) Anything under the /sparx URL is assumed to be a resource or   *
    *    asset so it's forwarded to the normal static file servlet.     *
    * 3) Anything under the /resources URL is assumed to be a resource  *
    *    so it's forwarded to the normal static file servlet.           *
    *                                                                   *
    * NOTE: if you will be using the NavigationPage forward or include  *
    *       attributes (<page ... forward=''> or <page include=''>)     *
    *       then you will need to ensure that those pages get handled   *
    *       by the appropriate app server servlets so you may need      *
    *       additional servlet-mappings for the forwarded or included   *
    *       resources.                                                  *
    *********************************************************************
    -->
	<servlet>
		<servlet-name>SparxNavigationController</servlet-name>
		<servlet-class>com.netspective.sparx.navigate.NavigationControllerServlet</servlet-class>
	</servlet>

    <servlet>
        <servlet-name>AppServerStaticFileServlet</servlet-name>
        <servlet-class>com.caucho.server.http.FileServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>SparxNavigationController</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>AppServerStaticFileServlet</servlet-name>
        <url-pattern>/sparx/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>AppServerStaticFileServlet</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>

    <!--
    *********************************************************************
    * Setup Netspective Administration Console servlet                  *
    * - if no security is desired, simply remove or comment out all of  *
    *   the login-* init parameters.                                    *
    *********************************************************************
    -->
	<servlet>
		<servlet-name>NetspectiveConsole</servlet-name>
		<servlet-class>com.netspective.sparx.console.ConsoleServlet</servlet-class>
        <init-param>
            <param-name>login-manager-id</param-name>
            <param-value>console</param-value> <!-- the <login-manager> defined in the project that should be used -->
        </init-param>
        <init-param>
            <param-name>login-user-id</param-name>
            <param-value>console</param-value>
        </init-param>
        <init-param>
            <param-name>login-password</param-name> <!-- if you use this parameter then the encrypted one is not required -->
            <param-value>console</param-value>
        </init-param>
        <init-param>
            <param-name>login-password-encrypted</param-name> <!-- if you provide an encrypted password, it takes precedence over unencrypted -->
            <param-value>NCbHq1WqkpfDY</param-value> <!-- run "java com.netspective.commons.security.Crypt NC <password>" to generate encrypted password -->
        </init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>NetspectiveConsole</servlet-name>
		<url-pattern>/console/*</url-pattern>
	</servlet-mapping>

    <!--
    *********************************************************************
    * Specify the default database connection - the default-data-source *
    * context-param's value is defined as a resource-ref in this        *
    * web.xml file (see below).                                         *
    *********************************************************************
    -->
	<context-param>
	  <param-name>com.netspective.sparx.DEFAULT_DATA_SOURCE</param-name>
	  <param-value>jdbc/default</param-value>
	</context-param>

	<resource-ref>
	  <res-ref-name>jdbc/default</res-ref-name>
	  <res-type>javax.sql.DataSource</res-type>
	  <init-param driver-name="org.hsqldb.jdbcDriver"/>
	  <init-param url="jdbc:hsqldb:${app.docDir}/WEB-INF/database/instance/db"/>
	  <init-param user="sa"/>
	  <init-param password=""/>
	  <init-param max-connections="20"/>
	  <init-param enable-transaction="false"/>
	</resource-ref>

</web-app>
