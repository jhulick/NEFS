<!--
*******************************************************************************
**                                                                           **
**              NETSPECTIVE ENTERPRISE FRAMEWORKS SUITE (NEFS)               **
**     SOFTWARE DEVELOPMENT ENVIRONMENT (SDE) RESIN CONFIGURATION FILE.      **
**                                                                           **
** This file contains Resin configs for developing and unit testing NEFS     **
** code. This file assumes that all the test apps are pointing to            **
** NEFS_HOME/tools/idea/classes or NEFS_HOME/tools/eclipse/classes for       **
** compiled class files and are pointing to NEFS_HOME/[X]/lib/redist/*.jar   **
** for all the framework-required JAR files. Also, each of the test apps     **
** have their /sparx/* path mapped to the NEFS_HOME/Sparx/resources physical **
** directory. Because of the path-mapping requirement, <war-dir> is not used **
** and instead each test app is automatically created using a <web-app> URL  **
** mapping tags.                                                             **
**                                                                           **
** This file assumes that NEFS_HOME is C:\Projects\Frameworks. If your SDE   **
** workstation has the NEFS_HOME as something else, then do the following:   **
**                                                                           **
**   Change C:\Projects\Frameworks on line 62 to your path.                  **
**                                                                           **
** @author Shahid N. Shah                                                    **
*******************************************************************************
$Id: nefs-resin-3.0-sde-ide.conf,v 1.2 2003-11-26 17:33:47 shahid.shah Exp $
-->

<resin xmlns="http://caucho.com/ns/resin">
  <log name='' level='info' path='stdout:' timestamp='[%H:%M:%S.%s] '/>
  <log name='com.caucho.java' level='fine' path='stdout:' timestamp='[%H:%M:%S.%s] '/>
  <log name='com.caucho.loader' level='config' path='stdout:' timestamp='[%H:%M:%S.%s] '/>

  <dependency-check-interval>2s</dependency-check-interval>
  <javac compiler="internal" args=""/>

  <server>
    <http id='' host='*' port='8099'/>
    <cluster>
      <srun id="" host="127.0.0.1" port="6802" index="1"/>
    </cluster>

    <!--
       - If starting bin/resin as root on Unix, specify the user name
       - and group name for the web server user.
       -
       - <user-name>resin</user-name>
       - <group-name>resin</group-name>
      -->

    <ignore-client-disconnect>true</ignore-client-disconnect>
    <connection-pool>
      <thread-max>200</thread-max>
      <spare-thread-min>10</spare-thread-min>
      <spare-thread-max>20</spare-thread-max>
    </connection-pool>

    <cache path="cache" memory-size="10M"/>

    <!-- make sure to use Xerces and Xalan and not Resin XML/XSLT parsers! -->
    <system-property javax.xml.transform.TransformerFactory="org.apache.xalan.processor.TransformerFactoryImpl"/>
    <system-property javax.xml.parsers.DocumentBuilderFactory="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl"/>
    <system-property javax.xml.parsers.SAXParserFactory="org.apache.xerces.jaxp.SAXParserFactoryImpl"/>

    <!-- configures the default host, matching any host name -->
    <host id=''>
      <root-directory>C:\Projects\Frameworks</root-directory>
      <document-directory>${host.rootDir}/webapps</document-directory>

      <class-loader>
        <tree-loader path="$resin-home/lib"/>
      </class-loader>

    <web-app-default>
        <class-loader>
            <!--
            *********************************************************************
            * The following classpaths are required for locating web-app's      *
            * auto-compiling classes and all the jars.                          *
            *********************************************************************
            -->
            <compiling-loader path='WEB-INF/classes'/>
            <library-loader path='WEB-INF/lib'/>

            <!--
            *********************************************************************
            * The following classpaths are designed for developers that are     *
            * actively modifying frameworks (like Sparx) and are using an IDE.  *
            * The convenience is that the developer can point to the compiled   *
            * class files without having to copy them into JARs and placing it  *
            * within an application's WEB-INF.                                  *
            *                                                                   *
            * The Netspective Frameworks classes are found in this order:       *
            *   - check NEFS_HOME/tools/idea/classes (for JetBrains IDEA IDE)   *
            *   - check NEFS_HOME/tools/eclipse/classes (for Eclipse IDE)       *
            *********************************************************************
            -->

            <!-- all the compiled .class files if using the JetBrains IDEA IDE -->
            <simple-loader path='${host.rootDir}/tools/idea/classes'/>

            <!-- all the compiled .class files if using the Eclipse IDE -->
            <simple-loader path='${host.rootDir}/tools/eclipse/classes'/>

            <!-- all the 3rd party redistributable library files -->
            <library-loader path='${host.rootDir}/Commons/lib/redist'/>
            <library-loader path='${host.rootDir}/Axiom/lib/redist'/>
            <library-loader path='${host.rootDir}/Sparx/lib/redist'/>

            <!-- these are added because of com/netspective/<lib>/conf/*.xml resource files are here -->
            <simple-loader path='${host.rootDir}/Commons/src/java/main'/>
            <simple-loader path='${host.rootDir}/Axiom/src/java/main'/>
            <simple-loader path='${host.rootDir}/Sparx/src/java/main'/>

            <!-- needed to find Sparx/resources directory for NavigationControllerServlet WebResourceLocator for SDE -->
            <simple-loader path='${host.rootDir}'/>

            <!-- needed to find java-doc-xml/* files (resources/java-doc-xml)-->
            <simple-loader path='${host.rootDir}/Sparx'/>

            <!-- needed to find commons-logging and log4j.properties files in case apps don't have them -->
            <simple-loader path='${host.rootDir}/Commons/conf'/>
        </class-loader>

        <welcome-file-list>
          <welcome-file>index.html</welcome-file>
        </welcome-file-list>

        <!--
        *********************************************************************
        * The following path-mapping entry is only required for developers  *
        * that are actively modifying Sparx resources. The convenience is   *
        * that the developer can point to the resources in the main Sparx   *
        * codebase without copying them into the web application.           *
        *********************************************************************
        -->
        <path-mapping url-pattern='/sparx/*' real-path='${host.rootDir}/Sparx/resources'/>

        <!--
        *********************************************************************
        * All other settings should be non-Resin-specific and are found in  *
        * APPROOT/WEB-INF/web.xml                                           *
        *********************************************************************
        -->
        <config-file>WEB-INF/web.xml</config-file>
    </web-app-default>

    <!--
    *********************************************************************
    * Setup the URL mapping so that any application requested is mapped *
    * to webapps/<app-name>.                                            *
    *********************************************************************
    -->
    <web-app url-regexp='/([^/]+)' document-directory='${host.rootDir}/webapps/$1'/>

    </host>
  </server>
</resin>
